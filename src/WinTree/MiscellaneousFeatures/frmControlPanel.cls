 
 /*------------------------------------------------------------------------
    File        : frmControlPanel
    Purpose     : 
    Syntax      : 
    Description : 
    Author(s)   : mferrant
    Created     : Wed Jul 02 17:21:00 EDT 2008
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*.
USING Progress.Windows.Form.

USING System.Drawing.*.
USING System.Windows.Forms.*.

USING Infragistics.Win.*.
USING Infragistics.Win.UltraWinTree.*.

USING WinTree.MiscellaneousFeatures.*.
 
CLASS WinTree.MiscellaneousFeatures.frmControlPanel INHERITS Progress.Windows.Form   : 
	
	DEFINE PRIVATE VARIABLE components AS System.ComponentModel.IContainer.

	DEFINE PRIVATE VARIABLE cboShowEditorButtons AS System.Windows.Forms.ComboBox NO-UNDO.
	DEFINE PRIVATE VARIABLE lblShowEditorButtons AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PRIVATE VARIABLE pnlCutCopyPaste AS System.Windows.Forms.Panel NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdPasteNodes AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdCopySelectedNodes AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdCutSelectedNodes AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE chkAllowPaste AS System.Windows.Forms.CheckBox NO-UNDO.
	DEFINE PRIVATE VARIABLE chkAllowCopy AS System.Windows.Forms.CheckBox NO-UNDO.
	DEFINE PRIVATE VARIABLE chkAllowCut AS System.Windows.Forms.CheckBox NO-UNDO.
	DEFINE PRIVATE VARIABLE chkUseEditor AS System.Windows.Forms.CheckBox NO-UNDO.
	DEFINE PRIVATE VARIABLE propertyGrid1 AS System.Windows.Forms.PropertyGrid NO-UNDO.
	DEFINE PRIVATE VARIABLE cboEditorControl AS System.Windows.Forms.ComboBox NO-UNDO.
	DEFINE PRIVATE VARIABLE pnlEditorControl AS System.Windows.Forms.Panel NO-UNDO.
	DEFINE PRIVATE VARIABLE lblEditorControl AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdResetNodeSpacingAfter AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE pnlSaveLoadLayout AS System.Windows.Forms.Panel NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdLoad AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE grpSerializationType AS System.Windows.Forms.GroupBox NO-UNDO.
	DEFINE PRIVATE VARIABLE optXml AS System.Windows.Forms.RadioButton NO-UNDO.
	DEFINE PRIVATE VARIABLE optBinary AS System.Windows.Forms.RadioButton NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdSave AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE openFileDialog1 AS System.Windows.Forms.OpenFileDialog NO-UNDO.
	DEFINE PRIVATE VARIABLE pnlInterNodeSpacing AS System.Windows.Forms.Panel NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdResetNodeSpacingBefore AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE lblNodeSpacingAfter AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PRIVATE VARIABLE tbNodeSpacingAfter AS System.Windows.Forms.TrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE lblNodeSpacingBefore AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PRIVATE VARIABLE tbNodeSpacingBefore AS System.Windows.Forms.TrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE tbMaxLabelWidth AS System.Windows.Forms.TrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE grpOverride AS System.Windows.Forms.GroupBox NO-UNDO.
	DEFINE PRIVATE VARIABLE cboOverrides AS System.Windows.Forms.ComboBox NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdClose AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE pnlMultiline AS System.Windows.Forms.Panel NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdResetMaxLabelHeight AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE cmdResetMaxLabelWidth AS System.Windows.Forms.Button NO-UNDO.
	DEFINE PRIVATE VARIABLE chkMultiline AS System.Windows.Forms.CheckBox NO-UNDO.
	DEFINE PRIVATE VARIABLE lblMaxLabelHeight AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PRIVATE VARIABLE tbMaxLabelHeight AS System.Windows.Forms.TrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE lblMaxLabelWidth AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PRIVATE VARIABLE saveFileDialog1 AS System.Windows.Forms.SaveFileDialog NO-UNDO.
    DEFINE PRIVATE VARIABLE saveLoadFileName AS CHARACTER NO-UNDO.
    DEFINE PRIVATE STATIC PROPERTY FORM_WIDTH  AS INTEGER INITIAL 312 NO-UNDO GET.
	DEFINE PRIVATE STATIC PROPERTY FORM_HEIGHT AS INTEGER INITIAL 430 NO-UNDO GET.
	 
	DEFINE PRIVATE VARIABLE featureItemVal AS NewFeatureItem                          NO-UNDO.
	DEFINE PRIVATE VARIABLE treeControl    AS Infragistics.Win.UltraWinTree.UltraTree NO-UNDO.
    DEFINE PRIVATE VARIABLE owningForm     AS Progress.Windows.Form                   NO-UNDO. 

	CONSTRUCTOR PUBLIC frmControlPanel (  ):
		SUPER().
		InitializeComponent ( ).
	END CONSTRUCTOR.

	DESTRUCTOR PUBLIC frmControlPanel ( ):
		IF VALID-OBJECT(components) THEN DO:
			CAST(components, System.IDisposable):Dispose().
		END.
	END DESTRUCTOR.

	METHOD PRIVATE VOID InitializeComponent ( ):

/* 		NOTE: The following method is generated by the OpenEdge Advanced GUI Visual Designer.

		We strongly suggest that the contents of this method only be modified using the
		Visual Designer to avoid any incompatible modifications.

		Modifying the contents of this method using a code editor will invalidate any support for this file. */

		THIS-OBJECT:cboShowEditorButtons = NEW System.Windows.Forms.ComboBox().
		THIS-OBJECT:lblShowEditorButtons = NEW System.Windows.Forms.Label().
		THIS-OBJECT:pnlCutCopyPaste = NEW System.Windows.Forms.Panel().
		THIS-OBJECT:cmdPasteNodes = NEW System.Windows.Forms.Button().
		THIS-OBJECT:cmdCopySelectedNodes = NEW System.Windows.Forms.Button().
		THIS-OBJECT:cmdCutSelectedNodes = NEW System.Windows.Forms.Button().
		THIS-OBJECT:chkAllowPaste = NEW System.Windows.Forms.CheckBox().
		THIS-OBJECT:chkAllowCopy = NEW System.Windows.Forms.CheckBox().
		THIS-OBJECT:chkAllowCut = NEW System.Windows.Forms.CheckBox().
		THIS-OBJECT:chkUseEditor = NEW System.Windows.Forms.CheckBox().
		THIS-OBJECT:propertyGrid1 = NEW System.Windows.Forms.PropertyGrid().
		THIS-OBJECT:cboEditorControl = NEW System.Windows.Forms.ComboBox().
		THIS-OBJECT:pnlEditorControl = NEW System.Windows.Forms.Panel().
		THIS-OBJECT:lblEditorControl = NEW System.Windows.Forms.Label().
		THIS-OBJECT:cmdResetNodeSpacingAfter = NEW System.Windows.Forms.Button().
		THIS-OBJECT:pnlSaveLoadLayout = NEW System.Windows.Forms.Panel().
		THIS-OBJECT:cmdLoad = NEW System.Windows.Forms.Button().
		THIS-OBJECT:grpSerializationType = NEW System.Windows.Forms.GroupBox().
		THIS-OBJECT:optXml = NEW System.Windows.Forms.RadioButton().
		THIS-OBJECT:optBinary = NEW System.Windows.Forms.RadioButton().
		THIS-OBJECT:cmdSave = NEW System.Windows.Forms.Button().
		THIS-OBJECT:openFileDialog1 = NEW System.Windows.Forms.OpenFileDialog().
		THIS-OBJECT:pnlInterNodeSpacing = NEW System.Windows.Forms.Panel().
		THIS-OBJECT:cmdResetNodeSpacingBefore = NEW System.Windows.Forms.Button().
		THIS-OBJECT:lblNodeSpacingAfter = NEW System.Windows.Forms.Label().
		THIS-OBJECT:tbNodeSpacingAfter = NEW System.Windows.Forms.TrackBar().
		THIS-OBJECT:lblNodeSpacingBefore = NEW System.Windows.Forms.Label().
		THIS-OBJECT:tbNodeSpacingBefore = NEW System.Windows.Forms.TrackBar().
		THIS-OBJECT:tbMaxLabelWidth = NEW System.Windows.Forms.TrackBar().
		THIS-OBJECT:grpOverride = NEW System.Windows.Forms.GroupBox().
		THIS-OBJECT:cboOverrides = NEW System.Windows.Forms.ComboBox().
		THIS-OBJECT:cmdClose = NEW System.Windows.Forms.Button().
		THIS-OBJECT:pnlMultiline = NEW System.Windows.Forms.Panel().
		THIS-OBJECT:cmdResetMaxLabelHeight = NEW System.Windows.Forms.Button().
		THIS-OBJECT:cmdResetMaxLabelWidth = NEW System.Windows.Forms.Button().
		THIS-OBJECT:chkMultiline = NEW System.Windows.Forms.CheckBox().
		THIS-OBJECT:lblMaxLabelHeight = NEW System.Windows.Forms.Label().
		THIS-OBJECT:tbMaxLabelHeight = NEW System.Windows.Forms.TrackBar().
		THIS-OBJECT:lblMaxLabelWidth = NEW System.Windows.Forms.Label().
		THIS-OBJECT:saveFileDialog1 = NEW System.Windows.Forms.SaveFileDialog().
		THIS-OBJECT:pnlCutCopyPaste:SuspendLayout().
		THIS-OBJECT:pnlEditorControl:SuspendLayout().
		THIS-OBJECT:pnlSaveLoadLayout:SuspendLayout().
		THIS-OBJECT:grpSerializationType:SuspendLayout().
		THIS-OBJECT:pnlInterNodeSpacing:SuspendLayout().
		CAST(THIS-OBJECT:tbNodeSpacingAfter, System.ComponentModel.ISupportInitialize):BeginInit().
		CAST(THIS-OBJECT:tbNodeSpacingBefore, System.ComponentModel.ISupportInitialize):BeginInit().
		CAST(THIS-OBJECT:tbMaxLabelWidth, System.ComponentModel.ISupportInitialize):BeginInit().
		THIS-OBJECT:grpOverride:SuspendLayout().
		THIS-OBJECT:pnlMultiline:SuspendLayout().
		CAST(THIS-OBJECT:tbMaxLabelHeight, System.ComponentModel.ISupportInitialize):BeginInit().
		THIS-OBJECT:SuspendLayout().
		/*  */
		/* cboShowEditorButtons */
		/*  */
		THIS-OBJECT:cboShowEditorButtons:DropDownStyle = System.Windows.Forms.ComboBoxStyle:DropDownList.
		THIS-OBJECT:cboShowEditorButtons:Location = NEW System.Drawing.Point(133, 264).
		THIS-OBJECT:cboShowEditorButtons:Name = "cboShowEditorButtons".
		THIS-OBJECT:cboShowEditorButtons:Size = NEW System.Drawing.Size(139, 21).
		THIS-OBJECT:cboShowEditorButtons:TabIndex = 5.
		THIS-OBJECT:cboShowEditorButtons:SelectedIndexChanged:SUBSCRIBE(THIS-OBJECT:cboShowEditorButtons_SelectedIndexChanged).
		/*  */
		/* lblShowEditorButtons */
		/*  */
		THIS-OBJECT:lblShowEditorButtons:Location = NEW System.Drawing.Point(133, 248).
		THIS-OBJECT:lblShowEditorButtons:Name = "lblShowEditorButtons".
		THIS-OBJECT:lblShowEditorButtons:Size = NEW System.Drawing.Size(104, 16).
		THIS-OBJECT:lblShowEditorButtons:TabIndex = 4.
		THIS-OBJECT:lblShowEditorButtons:Text = "ShowEditorButtons".
		THIS-OBJECT:lblShowEditorButtons:UseCompatibleTextRendering = TRUE.
		/*  */
		/* pnlCutCopyPaste */
		/*  */
		THIS-OBJECT:pnlCutCopyPaste:Controls:Add(THIS-OBJECT:cmdPasteNodes).
		THIS-OBJECT:pnlCutCopyPaste:Controls:Add(THIS-OBJECT:cmdCopySelectedNodes).
		THIS-OBJECT:pnlCutCopyPaste:Controls:Add(THIS-OBJECT:cmdCutSelectedNodes).
		THIS-OBJECT:pnlCutCopyPaste:Controls:Add(THIS-OBJECT:chkAllowPaste).
		THIS-OBJECT:pnlCutCopyPaste:Controls:Add(THIS-OBJECT:chkAllowCopy).
		THIS-OBJECT:pnlCutCopyPaste:Controls:Add(THIS-OBJECT:chkAllowCut).
		THIS-OBJECT:pnlCutCopyPaste:Location = NEW System.Drawing.Point(0, 74).
		THIS-OBJECT:pnlCutCopyPaste:Name = "pnlCutCopyPaste".
		THIS-OBJECT:pnlCutCopyPaste:Size = NEW System.Drawing.Size(280, 210).
		THIS-OBJECT:pnlCutCopyPaste:TabIndex = 25.
		/*  */
		/* cmdPasteNodes */
		/*  */
		THIS-OBJECT:cmdPasteNodes:Location = NEW System.Drawing.Point(16, 176).
		THIS-OBJECT:cmdPasteNodes:Name = "cmdPasteNodes".
		THIS-OBJECT:cmdPasteNodes:Size = NEW System.Drawing.Size(120, 23).
		THIS-OBJECT:cmdPasteNodes:TabIndex = 14.
		THIS-OBJECT:cmdPasteNodes:Text = "PasteNodes".
		THIS-OBJECT:cmdPasteNodes:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdPasteNodes:Click:SUBSCRIBE(THIS-OBJECT:cmdPasteNodes_Click).
		/*  */
		/* cmdCopySelectedNodes */
		/*  */
		THIS-OBJECT:cmdCopySelectedNodes:Location = NEW System.Drawing.Point(16, 144).
		THIS-OBJECT:cmdCopySelectedNodes:Name = "cmdCopySelectedNodes".
		THIS-OBJECT:cmdCopySelectedNodes:Size = NEW System.Drawing.Size(120, 23).
		THIS-OBJECT:cmdCopySelectedNodes:TabIndex = 13.
		THIS-OBJECT:cmdCopySelectedNodes:Text = "CopySelectedNodes".
		THIS-OBJECT:cmdCopySelectedNodes:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdCopySelectedNodes:Click:SUBSCRIBE(THIS-OBJECT:cmdCopySelectedNodes_Click).
		/*  */
		/* cmdCutSelectedNodes */
		/*  */
		THIS-OBJECT:cmdCutSelectedNodes:Location = NEW System.Drawing.Point(16, 112).
		THIS-OBJECT:cmdCutSelectedNodes:Name = "cmdCutSelectedNodes".
		THIS-OBJECT:cmdCutSelectedNodes:Size = NEW System.Drawing.Size(120, 23).
		THIS-OBJECT:cmdCutSelectedNodes:TabIndex = 12.
		THIS-OBJECT:cmdCutSelectedNodes:Text = "CutSelectedNodes".
		THIS-OBJECT:cmdCutSelectedNodes:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdCutSelectedNodes:Click:SUBSCRIBE(THIS-OBJECT:cmdCutSelectedNodes_Click).
		/*  */
		/* chkAllowPaste */
		/*  */
		THIS-OBJECT:chkAllowPaste:Location = NEW System.Drawing.Point(16, 64).
		THIS-OBJECT:chkAllowPaste:Name = "chkAllowPaste".
		THIS-OBJECT:chkAllowPaste:Size = NEW System.Drawing.Size(104, 24).
		THIS-OBJECT:chkAllowPaste:TabIndex = 11.
		THIS-OBJECT:chkAllowPaste:Text = "AllowPaste".
		THIS-OBJECT:chkAllowPaste:ThreeState = TRUE.
		THIS-OBJECT:chkAllowPaste:UseCompatibleTextRendering = TRUE.
		/*  */
		/* chkAllowCopy */
		/*  */
		THIS-OBJECT:chkAllowCopy:Location = NEW System.Drawing.Point(16, 40).
		THIS-OBJECT:chkAllowCopy:Name = "chkAllowCopy".
		THIS-OBJECT:chkAllowCopy:Size = NEW System.Drawing.Size(104, 24).
		THIS-OBJECT:chkAllowCopy:TabIndex = 10.
		THIS-OBJECT:chkAllowCopy:Text = "AllowCopy".
		THIS-OBJECT:chkAllowCopy:ThreeState = TRUE.
		THIS-OBJECT:chkAllowCopy:UseCompatibleTextRendering = TRUE.
		/*  */
		/* chkAllowCut */
		/*  */
		THIS-OBJECT:chkAllowCut:Location = NEW System.Drawing.Point(16, 16).
		THIS-OBJECT:chkAllowCut:Name = "chkAllowCut".
		THIS-OBJECT:chkAllowCut:Size = NEW System.Drawing.Size(104, 24).
		THIS-OBJECT:chkAllowCut:TabIndex = 9.
		THIS-OBJECT:chkAllowCut:Text = "AllowCut".
		THIS-OBJECT:chkAllowCut:ThreeState = TRUE.
		THIS-OBJECT:chkAllowCut:UseCompatibleTextRendering = TRUE.
		/*  */
		/* chkUseEditor */
		/*  */
		THIS-OBJECT:chkUseEditor:Location = NEW System.Drawing.Point(16, 248).
		THIS-OBJECT:chkUseEditor:Name = "chkUseEditor".
		THIS-OBJECT:chkUseEditor:Size = NEW System.Drawing.Size(88, 16).
		THIS-OBJECT:chkUseEditor:TabIndex = 3.
		THIS-OBJECT:chkUseEditor:Text = "UseEditor".
		THIS-OBJECT:chkUseEditor:ThreeState = TRUE.
		THIS-OBJECT:chkUseEditor:UseCompatibleTextRendering = TRUE.
		/*  */
		/* propertyGrid1 */
		/*  */
		THIS-OBJECT:propertyGrid1:HelpVisible = FALSE.
		THIS-OBJECT:propertyGrid1:LineColor = System.Drawing.SystemColors:ScrollBar.
		THIS-OBJECT:propertyGrid1:Location = NEW System.Drawing.Point(8, 56).
		THIS-OBJECT:propertyGrid1:Name = "propertyGrid1".
		THIS-OBJECT:propertyGrid1:Size = NEW System.Drawing.Size(264, 184).
		THIS-OBJECT:propertyGrid1:TabIndex = 2.
		THIS-OBJECT:propertyGrid1:UseCompatibleTextRendering = TRUE.
		/*  */
		/* cboEditorControl */
		/*  */
		THIS-OBJECT:cboEditorControl:DropDownStyle = System.Windows.Forms.ComboBoxStyle:DropDownList.
		THIS-OBJECT:cboEditorControl:Location = NEW System.Drawing.Point(8, 24).
		THIS-OBJECT:cboEditorControl:Name = "cboEditorControl".
		THIS-OBJECT:cboEditorControl:Size = NEW System.Drawing.Size(264, 21).
		THIS-OBJECT:cboEditorControl:TabIndex = 1.
		THIS-OBJECT:cboEditorControl:SelectedIndexChanged:SUBSCRIBE(THIS-OBJECT:cboEditorControl_SelectedIndexChanged).
		/*  */
		/* pnlEditorControl */
		/*  */
		THIS-OBJECT:pnlEditorControl:Controls:Add(THIS-OBJECT:cboShowEditorButtons).
		THIS-OBJECT:pnlEditorControl:Controls:Add(THIS-OBJECT:lblShowEditorButtons).
		THIS-OBJECT:pnlEditorControl:Controls:Add(THIS-OBJECT:chkUseEditor).
		THIS-OBJECT:pnlEditorControl:Controls:Add(THIS-OBJECT:propertyGrid1).
		THIS-OBJECT:pnlEditorControl:Controls:Add(THIS-OBJECT:cboEditorControl).
		THIS-OBJECT:pnlEditorControl:Controls:Add(THIS-OBJECT:lblEditorControl).
		THIS-OBJECT:pnlEditorControl:Location = NEW System.Drawing.Point(304, 148).
		THIS-OBJECT:pnlEditorControl:Name = "pnlEditorControl".
		THIS-OBJECT:pnlEditorControl:Size = NEW System.Drawing.Size(280, 296).
		THIS-OBJECT:pnlEditorControl:TabIndex = 28.
		/*  */
		/* lblEditorControl */
		/*  */
		THIS-OBJECT:lblEditorControl:AutoSize = TRUE.
		THIS-OBJECT:lblEditorControl:Location = NEW System.Drawing.Point(8, 8).
		THIS-OBJECT:lblEditorControl:Name = "lblEditorControl".
		THIS-OBJECT:lblEditorControl:Size = NEW System.Drawing.Size(73, 17).
		THIS-OBJECT:lblEditorControl:TabIndex = 0.
		THIS-OBJECT:lblEditorControl:Text = "Editor Control".
		THIS-OBJECT:lblEditorControl:UseCompatibleTextRendering = TRUE.
		/*  */
		/* cmdResetNodeSpacingAfter */
		/*  */
		THIS-OBJECT:cmdResetNodeSpacingAfter:Location = NEW System.Drawing.Point(192, 88).
		THIS-OBJECT:cmdResetNodeSpacingAfter:Name = "cmdResetNodeSpacingAfter".
		THIS-OBJECT:cmdResetNodeSpacingAfter:Size = NEW System.Drawing.Size(64, 23).
		THIS-OBJECT:cmdResetNodeSpacingAfter:TabIndex = 19.
		THIS-OBJECT:cmdResetNodeSpacingAfter:Text = "Reset".
		THIS-OBJECT:cmdResetNodeSpacingAfter:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdResetNodeSpacingAfter:Click:SUBSCRIBE(THIS-OBJECT:cmdResetNodeSpacingAfter_Click).
		/*  */
		/* pnlSaveLoadLayout */
		/*  */
		THIS-OBJECT:pnlSaveLoadLayout:Controls:Add(THIS-OBJECT:cmdLoad).
		THIS-OBJECT:pnlSaveLoadLayout:Controls:Add(THIS-OBJECT:grpSerializationType).
		THIS-OBJECT:pnlSaveLoadLayout:Controls:Add(THIS-OBJECT:cmdSave).
		THIS-OBJECT:pnlSaveLoadLayout:Location = NEW System.Drawing.Point(328, 172).
		THIS-OBJECT:pnlSaveLoadLayout:Name = "pnlSaveLoadLayout".
		THIS-OBJECT:pnlSaveLoadLayout:Size = NEW System.Drawing.Size(280, 176).
		THIS-OBJECT:pnlSaveLoadLayout:TabIndex = 23.
		/*  */
		/* cmdLoad */
		/*  */
		THIS-OBJECT:cmdLoad:Location = NEW System.Drawing.Point(176, 120).
		THIS-OBJECT:cmdLoad:Name = "cmdLoad".
		THIS-OBJECT:cmdLoad:Size = NEW System.Drawing.Size(75, 23).
		THIS-OBJECT:cmdLoad:TabIndex = 3.
		THIS-OBJECT:cmdLoad:Text = "Load".
		THIS-OBJECT:cmdLoad:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdLoad:Click:SUBSCRIBE(THIS-OBJECT:cmdLoad_Click).
		/*  */
		/* grpSerializationType */
		/*  */
		THIS-OBJECT:grpSerializationType:Controls:Add(THIS-OBJECT:optXml).
		THIS-OBJECT:grpSerializationType:Controls:Add(THIS-OBJECT:optBinary).
		THIS-OBJECT:grpSerializationType:Location = NEW System.Drawing.Point(8, 16).
		THIS-OBJECT:grpSerializationType:Name = "grpSerializationType".
		THIS-OBJECT:grpSerializationType:Size = NEW System.Drawing.Size(264, 72).
		THIS-OBJECT:grpSerializationType:TabIndex = 0.
		THIS-OBJECT:grpSerializationType:TabStop = FALSE.
		THIS-OBJECT:grpSerializationType:Text = "Serialization type".
		THIS-OBJECT:grpSerializationType:UseCompatibleTextRendering = TRUE.
		/*  */
		/* optXml */
		/*  */
		THIS-OBJECT:optXml:Location = NEW System.Drawing.Point(16, 48).
		THIS-OBJECT:optXml:Name = "optXml".
		THIS-OBJECT:optXml:Size = NEW System.Drawing.Size(88, 16).
		THIS-OBJECT:optXml:TabIndex = 1.
		THIS-OBJECT:optXml:Text = "Xml".
		THIS-OBJECT:optXml:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:optXml:CheckedChanged:SUBSCRIBE(THIS-OBJECT:optXml_CheckedChanged).
		/*  */
		/* optBinary */
		/*  */
		THIS-OBJECT:optBinary:Location = NEW System.Drawing.Point(16, 24).
		THIS-OBJECT:optBinary:Name = "optBinary".
		THIS-OBJECT:optBinary:Size = NEW System.Drawing.Size(88, 16).
		THIS-OBJECT:optBinary:TabIndex = 0.
		THIS-OBJECT:optBinary:Text = "Binary".
		THIS-OBJECT:optBinary:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:optBinary:CheckedChanged:SUBSCRIBE(THIS-OBJECT:optBinary_CheckedChanged).
		/*  */
		/* cmdSave */
		/*  */
		THIS-OBJECT:cmdSave:Location = NEW System.Drawing.Point(32, 120).
		THIS-OBJECT:cmdSave:Name = "cmdSave".
		THIS-OBJECT:cmdSave:Size = NEW System.Drawing.Size(75, 23).
		THIS-OBJECT:cmdSave:TabIndex = 2.
		THIS-OBJECT:cmdSave:Text = "Save".
		THIS-OBJECT:cmdSave:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdSave:Click:SUBSCRIBE(THIS-OBJECT:cmdSave_Click).
		/*  */
		/* pnlInterNodeSpacing */
		/*  */
		THIS-OBJECT:pnlInterNodeSpacing:Controls:Add(THIS-OBJECT:cmdResetNodeSpacingAfter).
		THIS-OBJECT:pnlInterNodeSpacing:Controls:Add(THIS-OBJECT:cmdResetNodeSpacingBefore).
		THIS-OBJECT:pnlInterNodeSpacing:Controls:Add(THIS-OBJECT:lblNodeSpacingAfter).
		THIS-OBJECT:pnlInterNodeSpacing:Controls:Add(THIS-OBJECT:tbNodeSpacingAfter).
		THIS-OBJECT:pnlInterNodeSpacing:Controls:Add(THIS-OBJECT:lblNodeSpacingBefore).
		THIS-OBJECT:pnlInterNodeSpacing:Controls:Add(THIS-OBJECT:tbNodeSpacingBefore).
		THIS-OBJECT:pnlInterNodeSpacing:Location = NEW System.Drawing.Point(304, 108).
		THIS-OBJECT:pnlInterNodeSpacing:Name = "pnlInterNodeSpacing".
		THIS-OBJECT:pnlInterNodeSpacing:Size = NEW System.Drawing.Size(280, 214).
		THIS-OBJECT:pnlInterNodeSpacing:TabIndex = 27.
		/*  */
		/* cmdResetNodeSpacingBefore */
		/*  */
		THIS-OBJECT:cmdResetNodeSpacingBefore:Location = NEW System.Drawing.Point(192, 24).
		THIS-OBJECT:cmdResetNodeSpacingBefore:Name = "cmdResetNodeSpacingBefore".
		THIS-OBJECT:cmdResetNodeSpacingBefore:Size = NEW System.Drawing.Size(64, 23).
		THIS-OBJECT:cmdResetNodeSpacingBefore:TabIndex = 18.
		THIS-OBJECT:cmdResetNodeSpacingBefore:Text = "Reset".
		THIS-OBJECT:cmdResetNodeSpacingBefore:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdResetNodeSpacingBefore:Click:SUBSCRIBE(THIS-OBJECT:cmdResetNodeSpacingBefore_Click).
		/*  */
		/* lblNodeSpacingAfter */
		/*  */
		THIS-OBJECT:lblNodeSpacingAfter:AutoSize = TRUE.
		THIS-OBJECT:lblNodeSpacingAfter:Location = NEW System.Drawing.Point(8, 80).
		THIS-OBJECT:lblNodeSpacingAfter:Name = "lblNodeSpacingAfter".
		THIS-OBJECT:lblNodeSpacingAfter:Size = NEW System.Drawing.Size(96, 17).
		THIS-OBJECT:lblNodeSpacingAfter:TabIndex = 17.
		THIS-OBJECT:lblNodeSpacingAfter:Text = "NodeSpacingAfter".
		THIS-OBJECT:lblNodeSpacingAfter:UseCompatibleTextRendering = TRUE.
		/*  */
		/* tbNodeSpacingAfter */
		/*  */
		THIS-OBJECT:tbNodeSpacingAfter:AutoSize = FALSE.
		THIS-OBJECT:tbNodeSpacingAfter:Location = NEW System.Drawing.Point(8, 96).
		THIS-OBJECT:tbNodeSpacingAfter:Maximum = 300.
		THIS-OBJECT:tbNodeSpacingAfter:Name = "tbNodeSpacingAfter".
		THIS-OBJECT:tbNodeSpacingAfter:Size = NEW System.Drawing.Size(184, 45).
		THIS-OBJECT:tbNodeSpacingAfter:TabIndex = 16.
		THIS-OBJECT:tbNodeSpacingAfter:TickStyle = System.Windows.Forms.TickStyle:None.
		THIS-OBJECT:tbNodeSpacingAfter:Scroll:SUBSCRIBE(THIS-OBJECT:tbNodeSpacingAfter_Scroll).
		/*  */
		/* lblNodeSpacingBefore */
		/*  */
		THIS-OBJECT:lblNodeSpacingBefore:AutoSize = TRUE.
		THIS-OBJECT:lblNodeSpacingBefore:Location = NEW System.Drawing.Point(8, 16).
		THIS-OBJECT:lblNodeSpacingBefore:Name = "lblNodeSpacingBefore".
		THIS-OBJECT:lblNodeSpacingBefore:Size = NEW System.Drawing.Size(106, 17).
		THIS-OBJECT:lblNodeSpacingBefore:TabIndex = 15.
		THIS-OBJECT:lblNodeSpacingBefore:Text = "NodeSpacingBefore".
		THIS-OBJECT:lblNodeSpacingBefore:UseCompatibleTextRendering = TRUE.
		/*  */
		/* tbNodeSpacingBefore */
		/*  */
		THIS-OBJECT:tbNodeSpacingBefore:AutoSize = FALSE.
		THIS-OBJECT:tbNodeSpacingBefore:Location = NEW System.Drawing.Point(8, 32).
		THIS-OBJECT:tbNodeSpacingBefore:Maximum = 300.
		THIS-OBJECT:tbNodeSpacingBefore:Name = "tbNodeSpacingBefore".
		THIS-OBJECT:tbNodeSpacingBefore:Size = NEW System.Drawing.Size(184, 45).
		THIS-OBJECT:tbNodeSpacingBefore:TabIndex = 14.
		THIS-OBJECT:tbNodeSpacingBefore:TickStyle = System.Windows.Forms.TickStyle:None.
		THIS-OBJECT:tbNodeSpacingBefore:Scroll:SUBSCRIBE(THIS-OBJECT:tbNodeSpacingBefore_Scroll).
		/*  */
		/* tbMaxLabelWidth */
		/*  */
		THIS-OBJECT:tbMaxLabelWidth:AutoSize = FALSE.
		THIS-OBJECT:tbMaxLabelWidth:Location = NEW System.Drawing.Point(16, 97).
		THIS-OBJECT:tbMaxLabelWidth:Maximum = 300.
		THIS-OBJECT:tbMaxLabelWidth:Name = "tbMaxLabelWidth".
		THIS-OBJECT:tbMaxLabelWidth:Size = NEW System.Drawing.Size(184, 45).
		THIS-OBJECT:tbMaxLabelWidth:TabIndex = 7.
		THIS-OBJECT:tbMaxLabelWidth:TickStyle = System.Windows.Forms.TickStyle:None.
		THIS-OBJECT:tbMaxLabelWidth:Scroll:SUBSCRIBE(THIS-OBJECT:tbMaxLabelWidth_Scroll).
		/*  */
		/* grpOverride */
		/*  */
		THIS-OBJECT:grpOverride:Controls:Add(THIS-OBJECT:cboOverrides).
		THIS-OBJECT:grpOverride:Location = NEW System.Drawing.Point(0, 12).
		THIS-OBJECT:grpOverride:Name = "grpOverride".
		THIS-OBJECT:grpOverride:Size = NEW System.Drawing.Size(288, 56).
		THIS-OBJECT:grpOverride:TabIndex = 22.
		THIS-OBJECT:grpOverride:TabStop = FALSE.
		THIS-OBJECT:grpOverride:Text = "Select the Override to apply the property settings to:".
		THIS-OBJECT:grpOverride:UseCompatibleTextRendering = TRUE.
		/*  */
		/* cboOverrides */
		/*  */
		THIS-OBJECT:cboOverrides:Location = NEW System.Drawing.Point(8, 24).
		THIS-OBJECT:cboOverrides:Name = "cboOverrides".
		THIS-OBJECT:cboOverrides:Size = NEW System.Drawing.Size(272, 21).
		THIS-OBJECT:cboOverrides:TabIndex = 1.
		THIS-OBJECT:cboOverrides:SelectedIndexChanged:SUBSCRIBE(THIS-OBJECT:cboOverrides_SelectedIndexChanged).
		/*  */
		/* cmdClose */
		/*  */
		THIS-OBJECT:cmdClose:Location = NEW System.Drawing.Point(98, 373).
		THIS-OBJECT:cmdClose:Name = "cmdClose".
		THIS-OBJECT:cmdClose:Size = NEW System.Drawing.Size(88, 24).
		THIS-OBJECT:cmdClose:TabIndex = 24.
		THIS-OBJECT:cmdClose:Text = "Close".
		THIS-OBJECT:cmdClose:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdClose:Click:SUBSCRIBE(THIS-OBJECT:cmdClose_Click).
		/*  */
		/* pnlMultiline */
		/*  */
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:cmdResetMaxLabelHeight).
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:cmdResetMaxLabelWidth).
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:chkMultiline).
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:lblMaxLabelHeight).
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:tbMaxLabelHeight).
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:lblMaxLabelWidth).
		THIS-OBJECT:pnlMultiline:Controls:Add(THIS-OBJECT:tbMaxLabelWidth).
		THIS-OBJECT:pnlMultiline:Location = NEW System.Drawing.Point(296, 20).
		THIS-OBJECT:pnlMultiline:Name = "pnlMultiline".
		THIS-OBJECT:pnlMultiline:Size = NEW System.Drawing.Size(280, 214).
		THIS-OBJECT:pnlMultiline:TabIndex = 26.
		/*  */
		/* cmdResetMaxLabelHeight */
		/*  */
		THIS-OBJECT:cmdResetMaxLabelHeight:Location = NEW System.Drawing.Point(200, 152).
		THIS-OBJECT:cmdResetMaxLabelHeight:Name = "cmdResetMaxLabelHeight".
		THIS-OBJECT:cmdResetMaxLabelHeight:Size = NEW System.Drawing.Size(64, 23).
		THIS-OBJECT:cmdResetMaxLabelHeight:TabIndex = 13.
		THIS-OBJECT:cmdResetMaxLabelHeight:Text = "Reset".
		THIS-OBJECT:cmdResetMaxLabelHeight:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdResetMaxLabelHeight:Click:SUBSCRIBE(THIS-OBJECT:cmdResetMaxLabelHeight_Click).
		/*  */
		/* cmdResetMaxLabelWidth */
		/*  */
		THIS-OBJECT:cmdResetMaxLabelWidth:Location = NEW System.Drawing.Point(200, 89).
		THIS-OBJECT:cmdResetMaxLabelWidth:Name = "cmdResetMaxLabelWidth".
		THIS-OBJECT:cmdResetMaxLabelWidth:Size = NEW System.Drawing.Size(64, 23).
		THIS-OBJECT:cmdResetMaxLabelWidth:TabIndex = 12.
		THIS-OBJECT:cmdResetMaxLabelWidth:Text = "Reset".
		THIS-OBJECT:cmdResetMaxLabelWidth:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:cmdResetMaxLabelWidth:Click:SUBSCRIBE(THIS-OBJECT:cmdResetMaxLabelWidth_Click).
		/*  */
		/* chkMultiline */
		/*  */
		THIS-OBJECT:chkMultiline:Location = NEW System.Drawing.Point(16, 25).
		THIS-OBJECT:chkMultiline:Name = "chkMultiline".
		THIS-OBJECT:chkMultiline:Size = NEW System.Drawing.Size(104, 24).
		THIS-OBJECT:chkMultiline:TabIndex = 11.
		THIS-OBJECT:chkMultiline:Text = "Mulitline".
		THIS-OBJECT:chkMultiline:ThreeState = TRUE.
		THIS-OBJECT:chkMultiline:UseCompatibleTextRendering = TRUE.
		THIS-OBJECT:chkMultiline:CheckStateChanged:SUBSCRIBE(THIS-OBJECT:chkMultiline_CheckedStateChanged).
		/*  */
		/* lblMaxLabelHeight */
		/*  */
		THIS-OBJECT:lblMaxLabelHeight:AutoSize = TRUE.
		THIS-OBJECT:lblMaxLabelHeight:Location = NEW System.Drawing.Point(16, 144).
		THIS-OBJECT:lblMaxLabelHeight:Name = "lblMaxLabelHeight".
		THIS-OBJECT:lblMaxLabelHeight:Size = NEW System.Drawing.Size(86, 17).
		THIS-OBJECT:lblMaxLabelHeight:TabIndex = 10.
		THIS-OBJECT:lblMaxLabelHeight:Text = "MaxLabelHeight".
		THIS-OBJECT:lblMaxLabelHeight:UseCompatibleTextRendering = TRUE.
		/*  */
		/* tbMaxLabelHeight */
		/*  */
		THIS-OBJECT:tbMaxLabelHeight:AutoSize = FALSE.
		THIS-OBJECT:tbMaxLabelHeight:Location = NEW System.Drawing.Point(16, 160).
		THIS-OBJECT:tbMaxLabelHeight:Maximum = 300.
		THIS-OBJECT:tbMaxLabelHeight:Name = "tbMaxLabelHeight".
		THIS-OBJECT:tbMaxLabelHeight:Size = NEW System.Drawing.Size(184, 45).
		THIS-OBJECT:tbMaxLabelHeight:TabIndex = 9.
		THIS-OBJECT:tbMaxLabelHeight:TickStyle = System.Windows.Forms.TickStyle:None.
		THIS-OBJECT:tbMaxLabelHeight:Scroll:SUBSCRIBE(THIS-OBJECT:tbMaxLabelHeight_Scroll).
		/*  */
		/* lblMaxLabelWidth */
		/*  */
		THIS-OBJECT:lblMaxLabelWidth:AutoSize = TRUE.
		THIS-OBJECT:lblMaxLabelWidth:Location = NEW System.Drawing.Point(16, 81).
		THIS-OBJECT:lblMaxLabelWidth:Name = "lblMaxLabelWidth".
		THIS-OBJECT:lblMaxLabelWidth:Size = NEW System.Drawing.Size(82, 17).
		THIS-OBJECT:lblMaxLabelWidth:TabIndex = 8.
		THIS-OBJECT:lblMaxLabelWidth:Text = "MaxLabelWidth".
		THIS-OBJECT:lblMaxLabelWidth:UseCompatibleTextRendering = TRUE.
		/*  */
		/* saveFileDialog1 */
		/*  */
		THIS-OBJECT:saveFileDialog1:FileName = "doc1".
		/*  */
		/* frmControlPanel */
		/*  */
		THIS-OBJECT:ClientSize = NEW System.Drawing.Size(611, 520).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:pnlCutCopyPaste).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:pnlEditorControl).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:pnlSaveLoadLayout).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:pnlInterNodeSpacing).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:grpOverride).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:cmdClose).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:pnlMultiline).
		THIS-OBJECT:Name = "frmControlPanel".
		THIS-OBJECT:Text = "frmControlPanel".
		THIS-OBJECT:pnlCutCopyPaste:ResumeLayout(FALSE).
		THIS-OBJECT:pnlEditorControl:ResumeLayout(FALSE).
		THIS-OBJECT:pnlEditorControl:PerformLayout().
		THIS-OBJECT:pnlSaveLoadLayout:ResumeLayout(FALSE).
		THIS-OBJECT:grpSerializationType:ResumeLayout(FALSE).
		THIS-OBJECT:pnlInterNodeSpacing:ResumeLayout(FALSE).
		THIS-OBJECT:pnlInterNodeSpacing:PerformLayout().
		CAST(THIS-OBJECT:tbNodeSpacingAfter, System.ComponentModel.ISupportInitialize):EndInit().
		CAST(THIS-OBJECT:tbNodeSpacingBefore, System.ComponentModel.ISupportInitialize):EndInit().
		CAST(THIS-OBJECT:tbMaxLabelWidth, System.ComponentModel.ISupportInitialize):EndInit().
		THIS-OBJECT:grpOverride:ResumeLayout(FALSE).
		THIS-OBJECT:pnlMultiline:ResumeLayout(FALSE).
		THIS-OBJECT:pnlMultiline:PerformLayout().
		CAST(THIS-OBJECT:tbMaxLabelHeight, System.ComponentModel.ISupportInitialize):EndInit().
		THIS-OBJECT:ResumeLayout(FALSE).

	END METHOD.












	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID ShowMe(newForm AS Progress.Windows.Form, treeC AS Infragistics.Win.UltraWinTree.UltraTree, featureItem AS NewFeatureItem, location AS System.Drawing.Point):
        IF treeC    	= ? OR 
           featureItem	= ? OR
           newForm   	= ? OR
           featureItem:FeatureType = NewFeatureType:NONE THEN
           UNDO, THROW new Progress.Lang.AppError( "Can't show ControlPanel." ).

        featureItemVal = featureItem.
        treeControl = treeC.
        owningForm = newForm.

        THIS-OBJECT:Text = "ControlPanel - " + featureItem:Description.

        InitializeDialog().

        HookCheckboxEvents().

        SetBounds(location:X, location:Y, frmControlPanel:FORM_WIDTH, frmControlPanel:FORM_HEIGHT ).
        WAIT-FOR THIS-OBJECT:ShowDialog().
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID InitializeDialog(  ):
        /*Populate the Overrides ComboBox*/
        cboOverrides:Items:Clear().
        cboOverrides:Items:Add(new OverrideWrapper(treeControl:Override, "Control-level")).
        cboOverrides:Items:Add(new OverrideWrapper(treeControl:NodeLevelOverrides[0], "Level 0")).
        cboOverrides:Items:Add(new OverrideWrapper(treeControl:NodeLevelOverrides[1], "Level 1")).
        cboOverrides:Items:Add(new OverrideWrapper(treeControl:NodeLevelOverrides[2], "Level 2")).

        IF treeControl:ActiveNode NE ? THEN
        DO:
            cboOverrides:Items:Add(new OverrideWrapper(treeControl:ActiveNode:Nodes:Override, "ActiveNode's Nodes collection")).
            cboOverrides:Items:Add(new OverrideWrapper(treeControl:ActiveNode:Override, "ActiveNode")).
        END.

        cboOverrides:SelectedIndex = 0.

        SynchronizeOverrideProperties().
        HideAllPanels().

        IF featureItemVal:FeatureType = NewFeatureType:SavingLoadingLayouts THEN
        	grpOverride:Enabled = FALSE.
        ELSE
        	grpOverride:Enabled = TRUE.

        CASE featureItemVal:FeatureType:
            WHEN NewFeatureType:CutCopyPaste THEN
            DO:
        		pnlCutCopyPaste:Location = new Point(8, 88).
        		pnlCutCopyPaste:Visible = TRUE.
        	END.

        	WHEN NewFeatureType:EmbeddableEditors THEN
        	DO:
        		SynchronizeOverrideProperty(PropertyIds:EditorControl).
        		SynchronizeOverrideProperty(PropertyIds:ShowEditorButtons).
        		
        		pnlEditorControl:Location = new Point(8, 72).
        		pnlEditorControl:Visible = TRUE.
        	END.

        	WHEN NewFeatureType:InterNodeSpacing THEN
            DO:
        		pnlInterNodeSpacing:Location = new Point(8, 72).
        		pnlInterNodeSpacing:Visible = TRUE.
        	END.

        	WHEN NewFeatureType:MultilineNodes OR
        	WHEN NewFeatureType:MaxLabelSizing THEN
        	DO:
        		pnlMultiline:Location = new Point(8, 72).
        		pnlMultiline:Visible = TRUE.
        	END.

        	WHEN NewFeatureType:SavingLoadingLayouts THEN
        	DO:
        		ASSIGN cmdSave:Enabled   = FALSE
        		       cmdLoad:Enabled   = FALSE
        		       optBinary:Checked = FALSE
        		       optXml:Checked    = FALSE.

        		pnlSaveLoadLayout:Location = new Point(8, 72).
        		pnlSaveLoadLayout:Visible = TRUE.
        	END.

        	OTHERWISE RETURN.
        END CASE.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID HookCheckboxEvents(  ):
	    /*The designer has some annoying tendencies, one of which
		  is to hook into a control's default event instead of the
		  one you tell it to hook into. This ensures that we hook
		  the CheckStateChanged event and not the CheckChanged event.*/
		chkAllowCopy:CheckStateChanged:SUBSCRIBE(THIS-OBJECT:chkAllowCopy_CheckedStateChanged).
		chkAllowCut:CheckStateChanged:SUBSCRIBE(THIS-OBJECT:chkAllowCut_CheckedStateChanged).
		chkAllowPaste:CheckStateChanged:SUBSCRIBE(THIS-OBJECT:chkAllowPaste_CheckedStateChanged).
		/*chkMultiline:CheckStateChanged:SUBSCRIBE(THIS-OBJECT:chkMultiline_CheckedStateChanged).*/
		chkUseEditor:CheckStateChanged:SUBSCRIBE(THIS-OBJECT:chkUseEditor_CheckedStateChanged).
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID chkAllowCopy_CheckedStateChanged(sender AS System.Object, e AS System.EventArgs):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? THEN
			overrideWrapper:OVERRIDE:AllowCopy = IF Progress.Util.EnumHelper:AreEqual(chkAllowCopy:CheckState, CheckState:Checked) THEN
													DefaultableBoolean:True
													ELSE IF Progress.Util.EnumHelper:AreEqual(chkAllowCopy:CheckState, CheckState:Unchecked) THEN
													DefaultableBoolean:FALSE
                                                    ELSE DefaultableBoolean:Default.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID chkAllowCut_CheckedStateChanged(sender AS System.Object, e AS System.EventArgs):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? THEN
	        overrideWrapper:OVERRIDE:AllowCut = IF Progress.Util.EnumHelper:AreEqual(chkAllowCut:CheckState, CheckState:CHECKED) THEN
												   DefaultableBoolean:True
												   ELSE IF Progress.Util.EnumHelper:AreEqual(chkAllowCut:CheckState, CheckState:Unchecked) THEN
												   DefaultableBoolean:FALSE
                                                   ELSE DefaultableBoolean:DEFAULT.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID chkAllowPaste_CheckedStateChanged(sender AS System.Object, e AS System.EventArgs):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? THEN
		    overrideWrapper:OVERRIDE:AllowPaste = IF Progress.Util.EnumHelper:AreEqual(chkAllowPaste:CheckState, CheckState:CHECKED) THEN
													DefaultableBoolean:True
													ELSE IF Progress.Util.EnumHelper:AreEqual(chkAllowPaste:CheckState, CheckState:Unchecked) THEN
													DefaultableBoolean:False
													ELSE DefaultableBoolean:Default.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID chkMultiline_CheckedStateChanged(sender AS System.Object, e AS System.EventArgs):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? THEN
	        overrideWrapper:OVERRIDE:Multiline = IF Progress.Util.EnumHelper:AreEqual(chkMultiline:CheckState,CheckState:CHECKED) THEN
													DefaultableBoolean:TRUE
													ELSE IF Progress.Util.EnumHelper:AreEqual(chkMultiline:CheckState,CheckState:Unchecked) THEN
													DefaultableBoolean:False
													ELSE DefaultableBoolean:Default.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID chkUseEditor_CheckedStateChanged(sender AS System.Object, e AS System.EventArgs):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? THEN
			overrideWrapper:OVERRIDE:UseEditor = IF Progress.Util.EnumHelper:AreEqual(chkUseEditor:CheckState,CheckState:CHECKED) THEN
													DefaultableBoolean:True
													ELSE IF Progress.Util.EnumHelper:AreEqual(chkUseEditor:CheckState,CheckState:Unchecked) THEN
													DefaultableBoolean:False
													ELSE DefaultableBoolean:Default.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID SynchronizeOverrideProperties():
		SynchronizeOverrideProperty(?).
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose: Synchronizes the dialog controls that represents the specified
			         Override property with the value of the property.
			    
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID SynchronizeOverrideProperty(INPUT propertyId AS PropertyIds ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.
	    DEFINE VARIABLE typeName AS CHARACTER NO-UNDO.

	    overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper = ? THEN	RETURN.

		IF propertyId = ? OR propertyId = PropertyIds:AllowCut THEN
        DO:
		    IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:OVERRIDE:AllowCut,DefaultableBoolean:TRUE) THEN 
        	chkAllowCut:CheckState = CheckState:CHECKED.
        	ELSE IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:OVERRIDE:AllowCut,DefaultableBoolean:FALSE) THEN
        		chkAllowCut:CheckState = CheckState:Unchecked.
        	ELSE
        		chkAllowCut:CheckState = CheckState:Indeterminate.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:AllowCopy THEN
        DO:
        	IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:AllowCopy, DefaultableBoolean:TRUE) THEN
        		chkAllowCopy:CheckState = CheckState:Checked.
        	ELSE IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:AllowCopy, DefaultableBoolean:FALSE) THEN
        		chkAllowCopy:CheckState = CheckState:Unchecked.
        	ELSE
        		chkAllowCopy:CheckState = CheckState:Indeterminate.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:AllowPaste THEN
        DO:
        	IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:AllowPaste, DefaultableBoolean:True) THEN
        		chkAllowPaste:CheckState = CheckState:Checked.
        	ELSE IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:AllowPaste, DefaultableBoolean:False) THEN
        		chkAllowPaste:CheckState = CheckState:Unchecked.
        	ELSE
        		chkAllowPaste:CheckState = CheckState:Indeterminate.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:Multiline THEN
        DO:
        	IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:Multiline, DefaultableBoolean:True) THEN
        		chkMultiline:CheckState = CheckState:Checked.
        	ELSE IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:Multiline, DefaultableBoolean:False) THEN
        		chkMultiline:CheckState = CheckState:Unchecked.
        	ELSE
        		chkMultiline:CheckState = CheckState:Indeterminate.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:MaxLabelWidth THEN
        DO:
        	IF overrideWrapper:Override:MaxLabelWidth > -1 THEN
        	DO:
        		tbMaxLabelWidth:Value = overrideWrapper:Override:MaxLabelWidth.
        		lblMaxLabelWidth:Text = "MaxLabelWidth (" + STRING(tbMaxLabelWidth:Value) + ")".
        	END.
        	ELSE DO:
        	    tbMaxLabelWidth:Value = 0.
        		lblMaxLabelWidth:Text = "MaxLabelWidth (Default)".
        	END.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:MaxLabelHeight THEN
        DO:
        	IF overrideWrapper:Override:MaxLabelHeight > -1 THEN
        	DO:
        		tbMaxLabelHeight:Value = overrideWrapper:Override:MaxLabelHeight.
        		lblMaxLabelHeight:Text = "MaxLabelHeight (" + STRING(tbMaxLabelHeight:Value) + ")".
        	END.
        	ELSE DO:
        		tbMaxLabelHeight:Value = 0.
        		lblMaxLabelHeight:Text = "MaxLabelHeight (Default)".
        	END.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:NodeSpacingBefore THEN
        DO:
        	IF overrideWrapper:Override:NodeSpacingBefore > -1 THEN
        	DO:
        		tbNodeSpacingBefore:Value = overrideWrapper:Override:NodeSpacingBefore.
        		lblNodeSpacingBefore:Text = "NodeSpacingBefore (" + STRING(tbNodeSpacingBefore:Value) + ")".
        	END.
        	ELSE DO:
        		tbNodeSpacingBefore:Value = 0.
        		lblNodeSpacingBefore:Text = "NodeSpacingBefore (Default)".
        	END.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:NodeSpacingAfter THEN
        DO:
        	IF overrideWrapper:Override:NodeSpacingAfter > -1 THEN
        	DO:
        		tbNodeSpacingAfter:Value = overrideWrapper:Override:NodeSpacingAfter.
        		lblNodeSpacingAfter:Text = "NodeSpacingAfter (" + STRING(tbNodeSpacingAfter:Value) + ")".
        	END.
        	ELSE DO:
        		tbNodeSpacingAfter:Value = 0.
        		lblNodeSpacingAfter:Text = "NodeSpacingAfter (Default)".
        	END.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:EditorControl THEN
        DO:
        	IF cboEditorControl:Items:Count < 2 THEN
        		PopulateEditorControlComboBox().

        	IF overrideWrapper:Override:EditorControl NE ? THEN
        	DO:
        		typeName = overrideWrapper:Override:EditorControl:GetType():ToString().
        		cboEditorControl:Text = typeName.

        		IF cboEditorControl:SelectedIndex = -1 THEN
                    cboEditorControl:SelectedIndex = 0.

        		propertyGrid1:SelectedObject = cboEditorControl:SelectedItem.
        	END.
        	ELSE DO:
        		cboEditorControl:SelectedIndex = 0.
        		propertyGrid1:SelectedObject = ?.
        	END.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:UseEditor THEN
        DO:
        	IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:UseEditor, DefaultableBoolean:True) THEN
        		chkUseEditor:CheckState = CheckState:Checked.
        	ELSE IF Progress.Util.EnumHelper:AreEqual(overrideWrapper:Override:AllowCut, DefaultableBoolean:False) THEN
        		chkUseEditor:CheckState = CheckState:Unchecked.
        	ELSE chkUseEditor:CheckState = CheckState:Indeterminate.
        END.

        IF propertyId = ? OR propertyId = PropertyIds:ShowEditorButtons THEN
        DO:
        	IF cboShowEditorButtons:Items:Count = 0 THEN
        		PopulateShowEditorButtonsComboBox().

        	cboShowEditorButtons:SelectedItem = overrideWrapper:Override:ShowEditorButtons.
        END.
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID PopulateEditorControlComboBox(  ):
	    DEFINE VARIABLE controlsEnum AS System.Collections.IEnumerator NO-UNDO.
	    DEFINE VARIABLE currentObject AS System.Object NO-UNDO.

        cboEditorControl:Items:Clear().
		cboEditorControl:Items:Add("[None]").
        controlsEnum = owningForm:Controls:GetEnumerator().
        
        controlsEnum:RESET().
		
		REPEAT:
		    IF NOT controlsEnum:MoveNext() THEN LEAVE.
		    IF NOT TYPE-OF(controlsEnum:current,IProvidesEmbeddableEditor) THEN NEXT.

			cboEditorControl:Items:Add(controlsEnum:current).
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID PopulateShowEditorButtonsComboBox():
	    DEFINE VARIABLE i AS INTEGER NO-UNDO.
	    DEFINE VARIABLE arrayValues AS System.Array NO-UNDO.
        cboShowEditorButtons:Items:Clear().

		arrayValues = System.Enum:GetValues(Progress.Util.TypeHelper:GetType("Infragistics.Win.UltraWinTree.ShowEditorButtons")).

		REPEAT i = 0 TO arrayValues:LENGTH - 1:
		    cboShowEditorButtons:Items:Add(arrayValues:GetValue(i)).
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	METHOD PRIVATE VOID HideAllPanels(  ):
	    DEFINE VARIABLE ctrls        AS System.Windows.Forms.Control+ControlCollection NO-UNDO.  
        DEFINE VARIABLE numControls  AS INTEGER NO-UNDO.
        DEFINE VARIABLE currentPanel AS System.Windows.Forms.Panel NO-UNDO.

        ctrls = THIS-OBJECT:Controls.

        DO numControls = 0 TO ctrls:COUNT - 1:
            IF NOT TYPE-OF(ctrls[numControls], System.Windows.Forms.Panel) THEN NEXT.
            currentPanel = CAST(ctrls[numControls],System.Windows.Forms.Panel). 
            currentPanel:VISIBLE = FALSE.
        END.
	END METHOD.
 
	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cboEditorControl_SelectedIndexChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper              NO-UNDO.
	    DEFINE VARIABLE editorControl   AS System.Windows.Forms.Control NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? THEN
        DO:
	        IF cboEditorControl:SelectedIndex = 0 THEN
            DO:
			    overrideWrapper:OVERRIDE:ResetEditorControl().
			    RETURN.
			END.

	        editorControl = CAST(cboEditorControl:SelectedItem,System.Windows.Forms.Control).

    		propertyGrid1:SelectedObject = cboEditorControl:SelectedItem.
			overrideWrapper:OVERRIDE:EditorControl = editorControl.
/*Code commented due to bug OE00171357
				IF treeControl:UIElement NE ? THEN 
				    treeControl:UIElement:DirtyChildElements(TRUE).
*/
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cboOverrides_SelectedIndexChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        SynchronizeOverrideProperties().
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cboShowEditorButtons_SelectedIndexChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

	    overrideWrapper = CAST(cboOverrides:SelectedItem,OverrideWrapper).

		IF overrideWrapper NE ? AND cboShowEditorButtons:SelectedItem NE ? THEN
		    overrideWrapper:OVERRIDE:ShowEditorButtons = CAST(cboShowEditorButtons:SelectedItem,ShowEditorButtons).
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdClose_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        /*Since changes to editor properties could affect the size of nodes,
          call RefreshMetrics to unsure that node sizes	are brought up to date.*/
		IF featureItemVal:FeatureType = NewFeatureType:EmbeddableEditors THEN
		    treeControl:RefreshMetrics().

		Close().

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdCopySelectedNodes_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        IF treeControl:Nodes:Count > 0 THEN
        DO:
			IF treeControl:DataSource NE ? THEN RETURN.

			IF treeControl:SelectedNodes:Count = 0 THEN
			    treeControl:Nodes[0]:Selected = TRUE.		

			treeControl:CopySelectedNodes().
		END.
		ELSE MESSAGE "There are no nodes to copy."
             VIEW-AS ALERT-BOX INFORMATION
             TITLE "Cannot Copy Nodes".
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdCutSelectedNodes_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        IF treeControl:SelectedNodes:Count = 0 AND treeControl:Nodes:Count > 0 THEN
		    treeControl:Nodes[0]:Selected = TRUE.

		treeControl:CutSelectedNodes().
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdLoad_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):

        ASSIGN saveLoadFileName = "".

		IF optBinary:Checked THEN
			ShowFileDialog(SaveLoadLayoutType:Load, SaveLoadLayoutType:Binary).
		ELSE
			ShowFileDialog(SaveLoadLayoutType:Load, SaveLoadLayoutType:Xml).

		IF LENGTH(saveLoadFileName) > 0 THEN
        DO ON ERROR UNDO:
			treeControl:Nodes:Clear().
			treeControl:LoadFromBinary(saveLoadFileName).

			CATCH e2 AS Progress.Lang.Error :
				treeControl:LoadFromXml(saveLoadFileName).
				CATCH e1 AS Progress.Lang.Error :
				    MessageBox:Show( "Unable to load the specified layout.", "Error" ).
				END CATCH.
			END CATCH.				
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC VOID ShowFileDialog(INPUT operation AS INTEGER, INPUT layoutType AS INTEGER):
	    DEFINE VARIABLE ext    AS CHARACTER NO-UNDO INITIAL "xml".
	    DEFINE VARIABLE filter AS CHARACTER NO-UNDO.

		IF layoutType = SaveLoadLayoutType:Binary THEN
	        ext = "bin".

		filter = "*." + ext + " | *.*".

		IF operation = SaveLoadLayoutType:Save THEN
        DO:
		    saveFileDialog1:DefaultExt = ext.
			saveFileDialog1:Filter = filter.
			saveFileDialog1:InitialDirectory = SEARCH("{0}").
			saveFileDialog1:Title = "Save UltraWinTree Layout".
			saveFileDialog1:FileName = "UltraTreeLayout." + ext.

			WAIT-FOR saveFileDialog1:ShowDialog().
			IF saveFileDialog1:FILENAME NE "" AND saveFileDialog1:FILENAME NE ? THEN
				ASSIGN saveLoadFileName = saveFileDialog1:FILENAME.
			ELSE
				ASSIGN saveLoadFileName = "".
		END.
		ELSE DO:
			IF operation = SaveLoadLayoutType:LOAD THEN
			DO:
				openFileDialog1:DefaultExt = ext.
				openFileDialog1:Filter = filter.
				openFileDialog1:InitialDirectory = SEARCH("{0}").
				openFileDialog1:Title = "Load UltraWinTree Layout".
				openFileDialog1:FileName = "".

            WAIT-FOR openFileDialog1:ShowDialog().

			IF openFileDialog1:FILENAME NE "" AND openFileDialog1:FILENAME NE ? THEN
				ASSIGN saveLoadFileName = openFileDialog1:FILENAME.
				ELSE
					ASSIGN saveLoadFileName = "".
			END.
			ELSE
				ASSIGN saveLoadFileName = "".
		END.
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdPasteNodes_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        IF treeControl:ActiveNode = ? THEN
		    MESSAGE "Cannot paste while ActiveNode is null."
            VIEW-AS ALERT-BOX ERROR.

		treeControl:PasteNodes(treeControl:ActiveNode).	
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdResetMaxLabelHeight_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
		DO:
			overrideWrapper:OVERRIDE:ResetMaxLabelHeight().
			lblMaxLabelHeight:Text = "MaxLabelHeight (Default)".
			tbMaxLabelHeight:Value = 0.
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdResetMaxLabelWidth_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
		DO:
		    overrideWrapper:OVERRIDE:ResetMaxLabelWidth().
			lblMaxLabelWidth:Text = "MaxLabelWidth (Default)".
			tbMaxLabelWidth:Value = 0.
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdResetNodeSpacingAfter_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
        DO:
			overrideWrapper:OVERRIDE:ResetNodeSpacingAfter().
			lblNodeSpacingAfter:Text = "NodeSpacingAfter (Default)".
			tbNodeSpacingAfter:Value = 0.
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdResetNodeSpacingBefore_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
        DO:
            overrideWrapper:OVERRIDE:ResetNodeSpacingBefore().
			lblNodeSpacingBefore:Text = "NodeSpacingBefore (Default)".
			tbNodeSpacingBefore:Value = 0.
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cmdSave_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):

        ASSIGN saveLoadFileName = "".

		IF optBinary:Checked THEN
		    ShowFileDialog(SaveLoadLayoutType:Save, SaveLoadLayoutType:Binary).

			IF LENGTH(saveLoadFileName) > 0 THEN
			    treeControl:SaveAsBinary(saveLoadFileName).				
			ELSE
			    ShowFileDialog(SaveLoadLayoutType:Save, SaveLoadLayoutType:Xml).

			IF LENGTH(saveLoadFileName) > 0 THEN
			    treeControl:SaveAsXml(saveLoadFileName).				
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID optBinary_CheckedChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        cmdSave:Enabled = TRUE.
		cmdLoad:Enabled = TRUE.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID optXml_CheckedChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        cmdSave:Enabled = TRUE.
		cmdLoad:Enabled = TRUE.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID tbMaxLabelHeight_Scroll( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
        DO:
		    overrideWrapper:OVERRIDE:MaxLabelHeight = tbMaxLabelHeight:VALUE.
			lblMaxLabelHeight:Text = "MaxLabelHeight (" + STRING(tbMaxLabelHeight:Value) + ")".
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
		    Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID tbMaxLabelWidth_Scroll( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
		DO:
		    overrideWrapper:OVERRIDE:MaxLabelWidth = tbMaxLabelWidth:VALUE.
			lblMaxLabelWidth:Text = "MaxLabelWidth (" + STRING(tbMaxLabelWidth:Value) + ")".
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID tbNodeSpacingAfter_Scroll( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
		DO:
		    overrideWrapper:OVERRIDE:NodeSpacingAfter = tbNodeSpacingAfter:VALUE.
			lblNodeSpacingAfter:Text = "NodeSpacingAfter (" + STRING(tbNodeSpacingAfter:Value) + ")".
		END.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID tbNodeSpacingBefore_Scroll( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    DEFINE VARIABLE overrideWrapper AS OverrideWrapper NO-UNDO.

        overrideWrapper = CAST(cboOverrides:SelectedItem, OverrideWrapper).

		IF overrideWrapper NE ? THEN
        DO:
		    overrideWrapper:OVERRIDE:NodeSpacingBefore = tbNodeSpacingBefore:VALUE.
			lblNodeSpacingBefore:Text = "NodeSpacingBefore (" + STRING(tbNodeSpacingBefore:Value) + ")".
		END.
	END METHOD.

END CLASS.