 
 /*------------------------------------------------------------------------
    File        : UltraTrackBarForm
    Purpose     : 
    Syntax      : 
    Description : 
    Author(s)   : mferrant
    Created     : Wed May 21 12:11:48 EDT 2008
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*.
USING Progress.Windows.Form.

USING System.Drawing.*.
USING System.Windows.Forms.*.

USING WinEditors.UltraTrackBar.ColorTrackBarDrawFilter.

USING Infragistics.Win.*.
USING Infragistics.Shared.*.
USING Infragistics.Win.UltraWinEditors.*.

CLASS WinEditors.UltraTrackBar.UltraTrackBarForm INHERITS Form   : 
	
	DEFINE PRIVATE VARIABLE components AS System.ComponentModel.IContainer.


	DEFINE PRIVATE VARIABLE lblScale AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE utbScale AS Infragistics.Win.UltraWinEditors.UltraTrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE ultraLabel1 AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE lblBrightness AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE lblSaturation AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE lblHue AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE utbBrightness AS Infragistics.Win.UltraWinEditors.UltraTrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE utbSaturation AS Infragistics.Win.UltraWinEditors.UltraTrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE lblRectHeight AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE lblRectWidth AS Infragistics.Win.Misc.UltraLabel NO-UNDO.
	DEFINE PRIVATE VARIABLE utbHue AS Infragistics.Win.UltraWinEditors.UltraTrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE utbRectHeight AS Infragistics.Win.UltraWinEditors.UltraTrackBar NO-UNDO.
	DEFINE PRIVATE VARIABLE pictureBox1 AS System.Windows.Forms.PictureBox NO-UNDO.
	DEFINE PRIVATE VARIABLE utbRectWidth AS Infragistics.Win.UltraWinEditors.UltraTrackBar NO-UNDO.

    DEFINE PRIVATE VARIABLE rectangleColor                    AS System.Drawing.Color    NO-UNDO.
    DEFINE PRIVATE PROPERTY colorTrackBarDrawFilterHue        AS WinEditors.UltraTrackBar.ColorTrackBarDrawFilter NO-UNDO GET. SET.
    DEFINE PRIVATE PROPERTY colorTrackBarDrawFilterSaturation AS WinEditors.UltraTrackBar.ColorTrackBarDrawFilter NO-UNDO GET. SET.
    DEFINE PRIVATE PROPERTY colorTrackBarDrawFilterBrightness AS WinEditors.UltraTrackBar.ColorTrackBarDrawFilter NO-UNDO GET. SET.

	CONSTRUCTOR PUBLIC UltraTrackBarForm (  ):
		SUPER().
		InitializeComponent ( ).
	END CONSTRUCTOR.

	DESTRUCTOR PUBLIC UltraTrackBarForm ( ):
		IF VALID-OBJECT(components) THEN DO:
			CAST(components, System.IDisposable):Dispose().
		END.
	END DESTRUCTOR.

	METHOD PRIVATE VOID InitializeComponent ( ):

/* 		NOTE: The following method is generated by the OpenEdge Advanced GUI Visual Designer.

		We strongly suggest that the contents of this method only be modified using the
		Visual Designer to avoid any incompatible modifications.

		Modifying the contents of this method using a code editor will invalidate any support for this file. */

		@VisualDesigner.FormMember (NeedsInitialize="true").
		DEFINE VARIABLE appearance3 AS Infragistics.Win.Appearance NO-UNDO.
		appearance3 = NEW Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		DEFINE VARIABLE appearance2 AS Infragistics.Win.Appearance NO-UNDO.
		appearance2 = NEW Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		DEFINE VARIABLE appearance4 AS Infragistics.Win.Appearance NO-UNDO.
		appearance4 = NEW Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		DEFINE VARIABLE appearance5 AS Infragistics.Win.Appearance NO-UNDO.
		appearance5 = NEW Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		DEFINE VARIABLE appearance1 AS Infragistics.Win.Appearance NO-UNDO.
		appearance1 = NEW Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		DEFINE VARIABLE appearance6 AS Infragistics.Win.Appearance NO-UNDO.
		appearance6 = NEW Infragistics.Win.Appearance().
		THIS-OBJECT:lblScale = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:utbScale = NEW Infragistics.Win.UltraWinEditors.UltraTrackBar().
		THIS-OBJECT:ultraLabel1 = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:lblBrightness = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:lblSaturation = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:lblHue = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:utbBrightness = NEW Infragistics.Win.UltraWinEditors.UltraTrackBar().
		THIS-OBJECT:utbSaturation = NEW Infragistics.Win.UltraWinEditors.UltraTrackBar().
		THIS-OBJECT:lblRectHeight = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:lblRectWidth = NEW Infragistics.Win.Misc.UltraLabel().
		THIS-OBJECT:utbHue = NEW Infragistics.Win.UltraWinEditors.UltraTrackBar().
		THIS-OBJECT:utbRectHeight = NEW Infragistics.Win.UltraWinEditors.UltraTrackBar().
		THIS-OBJECT:pictureBox1 = NEW System.Windows.Forms.PictureBox().
		THIS-OBJECT:utbRectWidth = NEW Infragistics.Win.UltraWinEditors.UltraTrackBar().
		CAST(THIS-OBJECT:pictureBox1, System.ComponentModel.ISupportInitialize):BeginInit().
		THIS-OBJECT:SuspendLayout().
		/*  */
		/* lblScale */
		/*  */
		appearance3:TextVAlignAsString = "Middle".
		THIS-OBJECT:lblScale:Appearance = appearance3.
		THIS-OBJECT:lblScale:Location = NEW System.Drawing.Point(324, 216).
		THIS-OBJECT:lblScale:Name = "lblScale".
		THIS-OBJECT:lblScale:Size = NEW System.Drawing.Size(139, 25).
		THIS-OBJECT:lblScale:TabIndex = 26.
		THIS-OBJECT:lblScale:Text = "Scale = ~{0~}".
		/*  */
		/* utbScale */
		/*  */
		THIS-OBJECT:utbScale:Location = NEW System.Drawing.Point(324, 247).
		THIS-OBJECT:utbScale:Name = "utbScale".
		THIS-OBJECT:utbScale:Size = NEW System.Drawing.Size(218, 31).
		THIS-OBJECT:utbScale:TabIndex = 25.
		THIS-OBJECT:utbScale:ValueObjectChanging:SUBSCRIBE(THIS-OBJECT:utbScale_ValueObjectChanging).
		THIS-OBJECT:utbScale:ValueChanged:SUBSCRIBE(THIS-OBJECT:utbScale_ValueChanged).
		/*  */
		/* ultraLabel1 */
		/*  */
		THIS-OBJECT:ultraLabel1:Anchor = CAST(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		THIS-OBJECT:ultraLabel1:Location = NEW System.Drawing.Point(8, 10).
		THIS-OBJECT:ultraLabel1:Name = "ultraLabel1".
		THIS-OBJECT:ultraLabel1:Size = NEW System.Drawing.Size(296, 49).
		THIS-OBJECT:ultraLabel1:TabIndex = 24.
		THIS-OBJECT:ultraLabel1:Text = "Adjust the TrackBars to control the properties of the rectangle. The various TrackBar controls will alter the height, width, hue, saturation, and brightness of the rectangle.".
		/*  */
		/* lblBrightness */
		/*  */
		appearance2:TextVAlignAsString = "Middle".
		THIS-OBJECT:lblBrightness:Appearance = appearance2.
		THIS-OBJECT:lblBrightness:Location = NEW System.Drawing.Point(285, 420).
		THIS-OBJECT:lblBrightness:Name = "lblBrightness".
		THIS-OBJECT:lblBrightness:Size = NEW System.Drawing.Size(139, 35).
		THIS-OBJECT:lblBrightness:TabIndex = 23.
		THIS-OBJECT:lblBrightness:Text = "Brightness = ~{0~}".
		/*  */
		/* lblSaturation */
		/*  */
		appearance4:TextVAlignAsString = "Middle".
		THIS-OBJECT:lblSaturation:Appearance = appearance4.
		THIS-OBJECT:lblSaturation:Location = NEW System.Drawing.Point(285, 379).
		THIS-OBJECT:lblSaturation:Name = "lblSaturation".
		THIS-OBJECT:lblSaturation:Size = NEW System.Drawing.Size(139, 35).
		THIS-OBJECT:lblSaturation:TabIndex = 21.
		THIS-OBJECT:lblSaturation:Text = "Saturation = ~{0~}".
		/*  */
		/* lblHue */
		/*  */
		appearance5:TextVAlignAsString = "Middle".
		THIS-OBJECT:lblHue:Appearance = appearance5.
		THIS-OBJECT:lblHue:Location = NEW System.Drawing.Point(285, 338).
		THIS-OBJECT:lblHue:Name = "lblHue".
		THIS-OBJECT:lblHue:Size = NEW System.Drawing.Size(139, 35).
		THIS-OBJECT:lblHue:TabIndex = 19.
		THIS-OBJECT:lblHue:Text = "Hue = ~{0~}".
		/*  */
		/* utbBrightness */
		/*  */
		THIS-OBJECT:utbBrightness:Location = NEW System.Drawing.Point(70, 420).
		THIS-OBJECT:utbBrightness:Name = "utbBrightness".
		THIS-OBJECT:utbBrightness:Size = NEW System.Drawing.Size(200, 31).
		THIS-OBJECT:utbBrightness:TabIndex = 22.
		THIS-OBJECT:utbBrightness:UseOsThemes = Infragistics.Win.DefaultableBoolean:False.
		THIS-OBJECT:utbBrightness:ValueChanged:SUBSCRIBE(THIS-OBJECT:utbBrightness_ValueChanged).
		/*  */
		/* utbSaturation */
		/*  */
		THIS-OBJECT:utbSaturation:Location = NEW System.Drawing.Point(70, 379).
		THIS-OBJECT:utbSaturation:Name = "utbSaturation".
		THIS-OBJECT:utbSaturation:Size = NEW System.Drawing.Size(200, 31).
		THIS-OBJECT:utbSaturation:TabIndex = 20.
		THIS-OBJECT:utbSaturation:UseOsThemes = Infragistics.Win.DefaultableBoolean:False.
		THIS-OBJECT:utbSaturation:ValueChanged:SUBSCRIBE(THIS-OBJECT:utbSaturation_ValueChanged).
		/*  */
		/* lblRectHeight */
		/*  */
		appearance1:TextVAlignAsString = "Middle".
		THIS-OBJECT:lblRectHeight:Appearance = appearance1.
		THIS-OBJECT:lblRectHeight:Location = NEW System.Drawing.Point(285, 163).
		THIS-OBJECT:lblRectHeight:Name = "lblRectHeight".
		THIS-OBJECT:lblRectHeight:Size = NEW System.Drawing.Size(139, 25).
		THIS-OBJECT:lblRectHeight:TabIndex = 17.
		THIS-OBJECT:lblRectHeight:Text = "Rectangle Height = ~{0~}".
		/*  */
		/* lblRectWidth */
		/*  */
		appearance6:TextVAlignAsString = "Middle".
		THIS-OBJECT:lblRectWidth:Appearance = appearance6.
		THIS-OBJECT:lblRectWidth:Location = NEW System.Drawing.Point(285, 132).
		THIS-OBJECT:lblRectWidth:Name = "lblRectWidth".
		THIS-OBJECT:lblRectWidth:Size = NEW System.Drawing.Size(139, 25).
		THIS-OBJECT:lblRectWidth:TabIndex = 15.
		THIS-OBJECT:lblRectWidth:Text = "Rectangle Width = ~{0~}".
		/*  */
		/* utbHue */
		/*  */
		THIS-OBJECT:utbHue:Location = NEW System.Drawing.Point(70, 338).
		THIS-OBJECT:utbHue:Name = "utbHue".
		THIS-OBJECT:utbHue:Size = NEW System.Drawing.Size(200, 31).
		THIS-OBJECT:utbHue:TabIndex = 18.
		THIS-OBJECT:utbHue:UseOsThemes = Infragistics.Win.DefaultableBoolean:False.
		THIS-OBJECT:utbHue:ValueChanged:SUBSCRIBE(THIS-OBJECT:utbHue_ValueChanged).
		/*  */
		/* utbRectHeight */
		/*  */
		THIS-OBJECT:utbRectHeight:Location = NEW System.Drawing.Point(3, 132).
		THIS-OBJECT:utbRectHeight:Name = "utbRectHeight".
		THIS-OBJECT:utbRectHeight:Orientation = System.Windows.Forms.Orientation:Vertical.
		THIS-OBJECT:utbRectHeight:Size = NEW System.Drawing.Size(31, 200).
		THIS-OBJECT:utbRectHeight:TabIndex = 14.
		THIS-OBJECT:utbRectHeight:ValueChanged:SUBSCRIBE(THIS-OBJECT:utbRectHeight_ValueChanged).
		/*  */
		/* pictureBox1 */
		/*  */
		THIS-OBJECT:pictureBox1:Location = NEW System.Drawing.Point(70, 132).
		THIS-OBJECT:pictureBox1:Name = "pictureBox1".
		THIS-OBJECT:pictureBox1:Size = NEW System.Drawing.Size(200, 200).
		THIS-OBJECT:pictureBox1:TabIndex = 16.
		THIS-OBJECT:pictureBox1:TabStop = FALSE.
		THIS-OBJECT:pictureBox1:Paint:SUBSCRIBE(THIS-OBJECT:pictureBox1_Paint).
		/*  */
		/* utbRectWidth */
		/*  */
		THIS-OBJECT:utbRectWidth:Location = NEW System.Drawing.Point(70, 65).
		THIS-OBJECT:utbRectWidth:Name = "utbRectWidth".
		THIS-OBJECT:utbRectWidth:Size = NEW System.Drawing.Size(200, 26).
		THIS-OBJECT:utbRectWidth:TabIndex = 13.
		THIS-OBJECT:utbRectWidth:TickmarkSettingsMinor:TrackOffset = 5.
		THIS-OBJECT:utbRectWidth:ValueChanged:SUBSCRIBE(THIS-OBJECT:utbRectWidth_ValueChanged).
		/*  */
		/* UltraTrackBarForm */
		/*  */
		THIS-OBJECT:ClientSize = NEW System.Drawing.Size(566, 484).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblScale).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:utbScale).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:ultraLabel1).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblBrightness).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblSaturation).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblHue).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:utbBrightness).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:utbSaturation).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblRectHeight).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblRectWidth).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:utbHue).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:utbRectHeight).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:pictureBox1).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:utbRectWidth).
		THIS-OBJECT:Name = "UltraTrackBarForm".
		THIS-OBJECT:Text = "UltraTrackBarForm".
		THIS-OBJECT:Load:SUBSCRIBE(THIS-OBJECT:UltraTrackBarForm_Load).
		CAST(THIS-OBJECT:pictureBox1, System.ComponentModel.ISupportInitialize):EndInit().
		THIS-OBJECT:ResumeLayout(FALSE).
		THIS-OBJECT:PerformLayout().
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID UltraTrackBarForm_Load( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
            /*Set up the Sizing TrackBars which control the size of the rectangle.*/ 
		    InitializeSizingTrackbars().

            /*Set up the color trackbars which control the color of the rectangle.*/ 
            InitializeColorTrackBars().

            /*Set up the scaling trackbar.*/ 
            InitializeScaleTrackbar().

            /*Force an update of the rectangle so it, and all of the labels, appear correct when the form first appears.*/ 
            UpdateRectangle().
            UpdateColors().

	END METHOD.

    /*------------------------------------------------------------------------------
			Purpose: This method sets up the two trackbars which control the size of
			         the rectangle.
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID InitializeSizingTrackbars():
        /*Set up the utbRectWidth trackbar.
          This trackbar will control the width of the rectangle.
          The range will go from 0 to the width of the PictureBox, and we will start out
          the value at the maximum.*/ 
        ASSIGN utbRectWidth:MinValue = 0
               utbRectWidth:MaxValue = pictureBox1:Width
               utbRectWidth:Value    = utbRectWidth:MaxValue.
            
        /*Set up the utbRectHeight trackbar.
          This trackbar will control the height of the rectangle.
          The range will go from 0 to the height of the PictureBox.
          The Value of this TrackBar will start at 0. On-screen, we want the rectangle to 
          get bigger as the TrackBar is moved downward. But when the Trackbar is vertical
          the Value gets bigger from bottom to top. So we will invert the value when determining
          the height of the rectangle.*/ 
        ASSIGN utbRectHeight:MinValue = 0
               utbRectHeight:MaxValue = pictureBox1:Height
               utbRectHeight:Value    = 0.

        /*Since the height trackbar will essentially be reversed, we need to change the images
          on the increment and decrement buttons. The images need to be reversed so that
          the increment button shows a minus and the decrement button shows a plus.*/ 
        ASSIGN utbRectHeight:ButtonSettings:DecrementButtonAppearance:Image = GetIncrementImage()
               utbRectHeight:ButtonSettings:IncrementButtonAppearance:Image = GetDecrementImage().

        /*Initialize properties that are commong to both of the sizing TrackBars.*/ 
        InitializeSizingTrackbar(utbRectWidth).
        InitializeSizingTrackbar(utbRectHeight).
    END METHOD. /*InitializeSizingTrackbars*/

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC System.Drawing.Image GetIncrementImage():
        RETURN GetEmbeddedImage("Increment.png").
    END METHOD. /*GetIncrementImage*/

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC System.Drawing.Image GetEmbeddedImage(INPUT resourceName AS CHARACTER):
        DEFINE VARIABLE img AS System.Drawing.IMAGE NO-UNDO.
        DEFINE VARIABLE imageFileName AS CHARACTER NO-UNDO.

        ASSIGN imageFileName = SEARCH("WinEditors/UltraTrackBar/Graphics/" + resourceName).
        img = System.Drawing.IMAGE:FromFile(imageFileName).
        RETURN img.
    END METHOD.

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC System.Drawing.Image GetDecrementImage():
        RETURN GetEmbeddedImage("Decrement.png").
    END METHOD.

    /*------------------------------------------------------------------------------
			Purpose: This method sets up the two trackbars which control the size
			         of the rectangle.
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID InitializeSizingTrackbar(INPUT ultraTrackBar AS UltraTrackBar):
        /*Show minor tickmarks every 10 points.*/ 
        ultraTrackBar:TickmarkSettingsMinor:Frequency = 10.

        /*Show Major tickmarks every 50 points.*/ 
        ASSIGN ultraTrackBar:TickmarkSettingsMajor:Visible = DefaultableBoolean:True
               ultraTrackBar:TickmarkSettingsMajor:Frequency = 50.

        /*Turn on the Increment, decrement, Min, and Max button.*/ 
        ASSIGN ultraTrackBar:ButtonSettings:ShowIncrementButtons = DefaultableBoolean:True
               ultraTrackBar:ButtonSettings:ShowMinMaxButtons    = DefaultableBoolean:TRUE.
    END METHOD. /*InitializeSizingTrackbar(INPUT ultraTrackBar AS UltraTrackBar)*/

    /*------------------------------------------------------------------------------
			Purpose: Sets up the Hue, Saturation, and Brightness TrackBars which
			         control the color of the rectangle.
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID InitializeColorTrackBars():

        /*Create three ColorTrackBarDrawFilter's. These are DrawFilters that draw a range of 
          colors in the track of the TrackBar control. It can be used to create a trackbar for
          Hue, Saturation, or Brightnness.*/
        ASSIGN colorTrackBarDrawFilterHue = new ColorTrackBarDrawFilter(utbHue, ColorTrackBarDrawFilter:COLOR_PROPERTY_HUE).
        colorTrackBarDrawFilterSaturation = new ColorTrackBarDrawFilter(utbSaturation, ColorTrackBarDrawFilter:COLOR_PROPERTY_SATURATION).
        colorTrackBarDrawFilterBrightness = new ColorTrackBarDrawFilter(utbBrightness, ColorTrackBarDrawFilter:COLOR_PROPERTY_BRIGHTNESS ).

        /*Set up the Hue TrackBar. Hue values are from 0 to 359. Initialize the value to 0, which is red.*/             
        ASSIGN utbHue:MinValue = 0
               utbHue:MaxValue = 359
               utbHue:Value    = 0.

        /*Set up the Saturation TrackBar. Saturation values are from 0 to 1, so we will use a 
          range of 0 to 255 and then divide by 255 when using the value. 
          Initialize the Value to 255 for maximum saturation of color.*/ 
        ASSIGN utbSaturation:MinValue = 0
               utbSaturation:MaxValue = 255
               utbSaturation:Value    = 255.

        /*Set up the Brightness TrackBar. Brightness values are from 0 to 1, so we will use a 
          range of 0 to 255 and then divide by 255 when using the value. 
          Initialize the value to 128, for medium brightness.*/
        ASSIGN utbBrightness:MinValue = 0
               utbBrightness:MaxValue = 255
               utbBrightness:Value    = 128.

        /*Initialize the property that are common to all three color TrackBars.*/ 
        InitializeColorTrackBar(utbHue).
        InitializeColorTrackBar(utbSaturation).
        InitializeColorTrackBar(utbBrightness).
    END METHOD. /*InitializeColorTrackBars*/

    /*------------------------------------------------------------------------------
			Purpose: This method initializes the properties of the Hue, Saturation,
			         and Brightness Trackbars which are common to all three.
			Notes:
			      param ultraTrackBar: The UltraTrackBar being initialized.
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID InitializeColorTrackBar(INPUT ultraTrackBar AS Infragistics.Win.UltraWinEditors.UltraTrackBar):
        /*The typical thumb on the TrackBar is solid and therefore covers the track.
          For the Hue, Saturation, and Brightness trackbars, we want the color at the 
          'selected' point to be visible to the user.
          We can acheive this effect by applying an image to the thumb with a transparent 'hole' 
          in the middle, and setting the BackColor of the Thumb to transparent.
          Since we need to do the same thing to three different TrackBar controls, we can create 
          the appearance once and apply it to all three.*/
        ASSIGN ultraTrackBar:ThumbAppearance:Image     = GetThumbImage()
               ultraTrackBar:ThumbAppearance:BackColor = System.Drawing.Color:Transparent.

        /*We want the track thickness to be the same size as the 'hole' in the thumb.*/             
        ultraTrackBar:TrackThickness = 11.

        /*Since the Hue, Saturation, and Brightness TrackBars deal with colors, we don't want
          tickmarks. Major tickmarks are invisible by default, so we just need to turn off the 
          minor tickmarks.*/
        ultraTrackBar:TickmarkSettingsMinor:Visible = DefaultableBoolean:False.

        /*When the user clicks on one of the color TrackBars, we want to jump straight to the 
          value they clicked, not just step toward it.*/ 
        ultraTrackBar:TrackClickAction = TrackClickAction:SetValue.

    END METHOD. /*InitializeColorTrackBar(INPUT ultraTrackBar AS UltraTrackBar)*/

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC System.Drawing.Image GetThumbImage():
        RETURN GetEmbeddedImage("ColorThumb.png":U).
    END METHOD.

    /*------------------------------------------------------------------------------
			Purpose: This method sets up the trackbar which control the scaling of
			         the image.
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID InitializeScaleTrackbar():
        /*This method sets up the scale trackbar in a similar way to the Microsoft Office2007
          scaling trackbar. This TrackBars value will control the scale of the image drawn in the
          Picturebox. We want this trackbar to essentially have 2 different ranges. The first range
          is from 10 to 100 percent. The second range is from 100 to 500 percent.*/ 
        utbScale:ViewStyle = TrackBarViewStyle:Office2007.

        /*We start with a MinValue of 10 and a MaxValue of 500.*/ 
        ASSIGN utbScale:MinValue = 10
               utbScale:MaxValue = 500.

        /*The middle point of this Trackbar would normally be 250. But we want the middle
          to represent 100. So we can use the MidPointSettings.Value to set the middle to 100. 
          Since there is a bigger range to the right of the midpoint, values to the right of the 
           midpoint are more densely spaced and values o the left are more sparsely spaced.*/ 
        utbScale:MidpointSettings:Value = 100.

        /*Make the midpoint tickmark visible.*/ 
        utbScale:MidpointSettings:Visible = DefaultableBoolean:TRUE.

        /*Set SmallChange and LargeChange.*/
        ASSIGN utbScale:SmallChange = 10
               utbScale:LargeChange = 10.

        /*Set the Value to 100, so we default to 100%.*/ 
        utbScale:Value = 100.
    END METHOD. /*METHOD PRIVATE VOID InitializeScaleTrackbar()*/

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID UpdateColors():
        DEFINE VARIABLE hue AS INTEGER NO-UNDO.
        DEFINE VARIABLE saturation AS DECIMAL NO-UNDO.
        DEFINE VARIABLE brightness AS DECIMAL NO-UNDO.

        /*Determine the Hue from the Hue TrackBar. Hue is a value from 0 to 359.*/ 
        hue = utbHue:Value.

        /*Determine the saturation and brightness from the appropriate TrackBars. These values 
          are from 0 to 1. Since the Trackbars only deal with integers, the trackbar range is
          0 to 255 and we need to divide by 255 here.*/ 
        ASSIGN saturation = utbSaturation:Value / 255.0
               brightness = utbBrightness:Value / 255.0.

        /*Use the values to get a color.*/ 
        rectangleColor = XPItemColor:ColorFromHLS(hue, brightness, saturation).

        /*Set the Base Hue on the Saturation and Brightness DrawFilters. This is so the 
          Saturation and Brightness TrackBars will display the range in the select hue.*/
        colorTrackBarDrawFilterBrightness:BaseHue = hue.
        colorTrackBarDrawFilterSaturation:BaseHue = hue.

        /*Invalidate the PictureBox so that the Rectangle will redraw. The rectangle is drawn
          in the pictureBox1_Paint event.*/
        pictureBox1:Invalidate().

        /*Update the labels to display the new Hue, Saturation, and Brightness.*/ 
        ASSIGN lblHue:Text        = "Hue = " + STRING(hue)
               lblSaturation:Text = "Saturation = " + STRING(saturation)
               lblBrightness:Text = "Brightness = " + STRING(brightness).
    END METHOD. /*METHOD PRIVATE VOID UpdateColors():*/

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID UpdateRectangle():
        /*Invalidate the PictureBox so that the Rectangle will redraw. The rectangle is drawn
          in the pictureBox1_Paint event.*/
        pictureBox1:Invalidate().

        /*Update the labels to display the numeric values for the size of the rectangle.*/
        ASSIGN lblRectWidth:Text = "Rectangle Width = " + STRING(GetRectangleWidth())
               lblRectHeight:Text = "Rectangle Height = " + STRING(GetRectangleHeight()).

        /*Update the label to display the scale.*/
        lblScale:Text = "Scale = " + STRING(utbScale:Value) + "%".
    END METHOD. /*METHOD PRIVATE VOID UpdateRectangle():*/

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC INTEGER GetRectangleWidth():
        /*Base the width of the rectangle on the width trackbar's Value.*/ 
        RETURN utbRectWidth:Value.
    END METHOD.

    /*------------------------------------------------------------------------------
			Purpose:
			Notes:
	------------------------------------------------------------------------------*/
    METHOD PUBLIC INTEGER GetRectangleHeight():
        /*Base the height of the rectangle on the height trackbar. 
          The value of the trackbar increases from top to bottom. But we want the rect to get
          bigger as the trackbar is adjust downward. So we need to invert the value
          here by subtracting the value from the MaxValue.*/
        RETURN utbRectHeight:MaxValue - utbRectHeight:Value.
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID pictureBox1_Paint( INPUT sender AS System.Object, INPUT e AS System.Windows.Forms.PaintEventArgs ):
	    DEFINE VARIABLE pictureBox AS PictureBox               NO-UNDO.
	    DEFINE VARIABLE rectWidth  AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE rectHeight AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE rectX      AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE rectY      AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE rectngl    AS System.Drawing.Rectangle NO-UNDO.
	    DEFINE VARIABLE spacing    AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE scale      AS DECIMAL                  NO-UNDO.
	    DEFINE VARIABLE loopX      AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE loopY      AS INTEGER                  NO-UNDO.
	    DEFINE VARIABLE brush      AS Brush                    NO-UNDO.

        pictureBox = CAST(sender, PictureBox).

        
        ASSIGN rectWidth  = GetRectangleWidth() /*Base the width of the rectangle on the width trackbar.*/
               rectHeight = GetRectangleHeight() /*Base the height of the rectangle on the height trackbar.*/
               /*Center the rect in the picturebox*/
               rectX   = (pictureBox:Width - rectWidth) / 2
               rectY   = (pictureBox:Height - rectHeight) / 2
               rectngl = new Rectangle(rectX, rectY, rectWidth, rectHeight).

        /*Draw the rect with a border.*/ 
        brush = new SolidBrush(rectangleColor).
        e:Graphics:FillRectangle(brush, rectngl).

        /*Draw a scaled grid based on the scale trackbar.*/ 
        ASSIGN scale   = utbScale:Value / 100.0
               spacing = System.Math:Max(10.0 * scale, 1).
            
        /*Draw the vertical lines*/
        REPEAT loopX = rectngl:x TO (rectngl:RIGHT - 1):
            e:Graphics:DrawLine(System.Drawing.Pens:Black, loopX, rectngl:Y, loopX, rectngl:Bottom - 1).
            ASSIGN loopX = loopX + spacing.
        END.

        /*Draw the horizontal lines*/
        REPEAT loopY = rectngl:y TO rectngl:BOTTOM - 1:
            e:Graphics:DrawLine(System.Drawing.Pens:Black, rectngl:X, loopY, rectngl:Right - 1, loopY).
            loopY = loopY + spacing.
        END.
	END METHOD. /* pictureBox1_Paint*/

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbRectWidth_ValueChanged(INPUT sender AS System.Object, INPUT e AS System.EventArgs):
        /*We need to redraw the rectangle any time the value of the TrackBar changes.*/             
        UpdateRectangle().
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbRectHeight_ValueChanged(INPUT sender AS System.Object, INPUT e AS System.EventArgs):
        /*We need to redraw the rectangle any time the value of the TrackBar changes.*/ 
        UpdateRectangle().
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbHue_ValueChanged(INPUT sender AS System.Object, INPUT e AS System.EventArgs):
            /*We need to redraw the rectangle any time the value of the TrackBar changes.*/ 
            UpdateColors().
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbSaturation_ValueChanged(INPUT sender AS System.Object, INPUT e AS System.EventArgs):
        /*We need to redraw the rectangle any time the value of the TrackBar changes.*/ 
        UpdateColors().
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbBrightness_ValueChanged(INPUT sender AS System.Object, INPUT e AS System.EventArgs):
        /*We need to redraw the rectangle any time the value of the TrackBar changes.*/ 
        UpdateColors().
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbScale_ValueChanged(INPUT sender AS System.Object, INPUT e AS System.EventArgs):
        UpdateRectangle().
    END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID utbScale_ValueObjectChanging(INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinEditors.TrackBarValueChangingEventArgs):
        DEFINE VARIABLE newValue AS INTEGER NO-UNDO.

        /*In the Office2007 trackbar, when you drag the thumb near the midpoint, it snaps
          to it, making the midpoint easier to select. 
          We can duplicate this behavior here.*/ 
        IF Progress.Util.EnumHelper:AreEqual(e:Source, TrackBarActionSource:Thumb) THEN
        DO:
            /*The ValueObject of the TrackBar can support nulls, but in this case, we know
              that it will never be null, so we can just cast to an int.*/ 
            newValue = e:NewValue.

            /*If the intended new value is between 90 and 140, snap to 100.*/ 
            IF newValue >= 90 AND newValue <= 140 THEN
                e:NewValue = 100. /*Set the new value to 100.*/
        END. /*IF Progress.Util.EnumHelper:AreEqual(e:Source, TrackBarActionSource:Thumb) THEN*/
        ELSE IF Progress.Util.EnumHelper:AreEqual(e:Source, TrackBarActionSource:IncrementButton) OR
                Progress.Util.EnumHelper:AreEqual(e:Source, TrackBarActionSource:DecrementButton) THEN
        DO:
            /*In Office2007, when you increment or decrement the trackbar, it always moves to
            the nearest multiple of 10. So if you drag the thumb to a value like 55, and then 
            increment, it goes to 60, rather than 55. This can be handled here.*/

            /*The ValueObject of the TrackBar can support nulls, but in this case, we know
              that it will never be null, so we can just cast to an int.*/ 
            newValue = e:NewValue.

            /*if the new value is not evenly divisible by 10...*/
            IF newValue MODULO 10 NE 0 THEN
            DO: 
                /*If we are decrementing, add 10 so that we will get the right result
                  when stripping off the decimal below.*/ 
                IF Progress.Util.EnumHelper:AreEqual(e:Source, TrackBarActionSource:DecrementButton) THEN
                    newValue = newValue + 10.

                /*Strip off the decimal value*/
                newValue = (newValue / 10) * 10.                        

                /*Set the new value*/
                e:NewValue = newValue.
            END. /*IF newValue MODULO 10 NE 0 THEN*/
        END. /*ELSE IF*/
    END METHOD. /*utbScale_ValueObjectChanging*/
END CLASS.