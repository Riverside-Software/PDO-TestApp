 /* 
ABL example derived from Infragistics source, copyright ©1992-2008 Infragistics, 
Inc., Windsor Corporate Park, 50 Millstone Road, Building 200 Suite 150, East 
Windsor, NJ 08520. All rights reserved.
*/
 /*------------------------------------------------------------------------
    File        : frmColumnStyles
    Purpose     : 
    Syntax      : 
    Description : 
    Author(s)   : hdaniels - copied/transformed from Infragistic sample  
    Created     : Sun May 04 12:21:26 EDT 2008
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*.
USING Progress.Windows.Form.
 
using WinGrid.SamplesExplorer.*.

CLASS WinGrid.SamplesExplorer.frmColumnStyles INHERITS Form implements ISamplesBase  : 
	
	DEFINE PRIVATE VARIABLE components AS System.ComponentModel.IContainer.


	define public variable btnTitle as System.Windows.Forms.Button no-undo.


	define private variable chkAutoFillToColumn as System.Windows.Forms.CheckBox no-undo.
	define public variable cboColumnStyle as System.Windows.Forms.ComboBox no-undo.
	define public variable lblDescription as System.Windows.Forms.Label no-undo.
	define public variable cboButtonWhenToDisplay as System.Windows.Forms.ComboBox no-undo.
	define public variable lblColumnStyle as System.Windows.Forms.Label no-undo.
	define public variable chkAutoEdit as System.Windows.Forms.CheckBox no-undo.
		

	define public variable UltraGrid1 as Infragistics.Win.UltraWinGrid.UltraGrid no-undo.
	
	/* manual code */
	define variable fOldLayoutStream as System.IO.MemoryStream no-undo.
	 
	/** ISamplesBase properties */
	
	/* Provides a description for the sample. */
	define public property Description as character no-undo 
	get:
	    return lblDescription:Text.
	end.
	
    /* Name of the sample. */
	define public property SampleName as character no-undo
    get:
        return btnTitle:Text. 
    end.
	
    /* Type of sample. */
	define public property SampleType as character no-undo
	get:
	    return "Feature".
	end.    

	/* Preview Picture for Sample */
	define public property PreviewPicture as System.Drawing.Image no-undo
    get:
        /* TODO: store path in static */
        return System.Drawing.Image:FromFile(SamplesPath:GraphicsPath + "/Previews/ColumnStyles.png").
    end.     
	
    define private variable fDataSet as System.Data.DataSet no-undo. 
    
    /* define private variable oldLayoutStream  as System.IO.MemoryStream no-undo.*/
		 
     
	define temp-table ttItem no-undo
	    field Seq       as  int /* sort in grid */
	    field EnumInt as int 
	    field name      as char
        index idx Seq.
	    
	define private static variable ULTRA_DROPDOWN as char no-undo init  "DropDown/Multi-column bound dropdown".
			

	define private variable uddStateList as Infragistics.Win.UltraWinGrid.UltraDropDown no-undo.
    define private variable bindingSource_State as Progress.Data.BindingSource no-undo.    
    define variable fStateDataSource as DataServices.IDataService no-undo.
    
	define variable fSalesrepDataSource as DataServices.IDataService no-undo.
   

 	define public variable lblButtonDisplayed as System.Windows.Forms.Label no-undo.
	

  	CONSTRUCTOR PUBLIC frmColumnStyles (  ):
		
		SUPER().
		session:system-alert-boxes = true. 
		InitializeComponent ( ).
        InitializeDataSources(). 
        InitializeForm().
	END CONSTRUCTOR.

	DESTRUCTOR PUBLIC frmColumnStyles ( ):

		IF VALID-OBJECT(components) THEN DO:
			CAST(components, System.IDisposable):Dispose().
		END.

	END DESTRUCTOR.

	method private void InitializeComponent ( ):

/* 		NOTE: The following method is generated by the OpenEdge Advanced GUI Visual Designer.

		We strongly suggest that the contents of this method only be modified using the
		Visual Designer to avoid any incompatible modifications.

		Modifying the contents of this method using a code editor will invalidate any support for this file. */

		this-object:btnTitle = new System.Windows.Forms.Button().
		this-object:chkAutoFillToColumn = new System.Windows.Forms.CheckBox().
		this-object:cboColumnStyle = new System.Windows.Forms.ComboBox().
		this-object:lblDescription = new System.Windows.Forms.Label().
		this-object:cboButtonWhenToDisplay = new System.Windows.Forms.ComboBox().
		this-object:lblColumnStyle = new System.Windows.Forms.Label().
		this-object:chkAutoEdit = new System.Windows.Forms.CheckBox().
		this-object:UltraGrid1 = new Infragistics.Win.UltraWinGrid.UltraGrid().
		this-object:uddStateList = new Infragistics.Win.UltraWinGrid.UltraDropDown().
		this-object:lblButtonDisplayed = new System.Windows.Forms.Label().
		cast(this-object:UltraGrid1, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:uddStateList, System.ComponentModel.ISupportInitialize):BeginInit().
		this-object:SuspendLayout().
		/*  */
		/* btnTitle */
		/*  */
		this-object:btnTitle:Anchor = cast(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		this-object:btnTitle:FlatStyle = System.Windows.Forms.FlatStyle:Flat.
		this-object:btnTitle:Font = new System.Drawing.Font("Arial", 14.25, System.Drawing.FontStyle:Bold, System.Drawing.GraphicsUnit:Point, Progress.Util.CastUtil:ToByte(0)).
		this-object:btnTitle:Location = new System.Drawing.Point(3, 1).
		this-object:btnTitle:Name = "btnTitle".
		this-object:btnTitle:Size = new System.Drawing.Size(801, 32).
		this-object:btnTitle:TabIndex = 7.
		this-object:btnTitle:Text = "Column Styles".
		this-object:btnTitle:TextAlign = System.Drawing.ContentAlignment:MiddleLeft.
		this-object:btnTitle:UseCompatibleTextRendering = true.
		this-object:btnTitle:Click:subscribe(this-object:btnTitle_Click).
		this-object:btnTitle:MouseUp:subscribe(this-object:btnTitle_MouseUp).
		/*  */
		/* chkAutoFillToColumn */
		/*  */
		this-object:chkAutoFillToColumn:Location = new System.Drawing.Point(216, 53).
		this-object:chkAutoFillToColumn:Name = "chkAutoFillToColumn".
		this-object:chkAutoFillToColumn:Size = new System.Drawing.Size(160, 16).
		this-object:chkAutoFillToColumn:TabIndex = 15.
		this-object:chkAutoFillToColumn:Text = "Auto fit to column".
		this-object:chkAutoFillToColumn:UseCompatibleTextRendering = true.
		this-object:chkAutoFillToColumn:CheckedChanged:subscribe(this-object:chkAutoFillToColumn_CheckedChanged).
		/*  */
		/* cboColumnStyle */
		/*  */
		this-object:cboColumnStyle:DropDownWidth = 176.
		this-object:cboColumnStyle:Location = new System.Drawing.Point(12, 85).
		this-object:cboColumnStyle:Name = "cboColumnStyle".
		this-object:cboColumnStyle:Size = new System.Drawing.Size(176, 21).
		this-object:cboColumnStyle:TabIndex = 12.
		this-object:cboColumnStyle:SelectedIndexChanged:subscribe(this-object:cboColumnStyle_SelectedIndexChanged).
		/*  */
		/* lblDescription */
		/*  */
		this-object:lblDescription:Anchor = cast(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		this-object:lblDescription:Location = new System.Drawing.Point(400, 53).
		this-object:lblDescription:Name = "lblDescription".
		this-object:lblDescription:Size = new System.Drawing.Size(331, 96).
		this-object:lblDescription:TabIndex = 10.
		this-object:lblDescription:Text = "Description".
		this-object:lblDescription:UseCompatibleTextRendering = true.
		/*  */
		/* cboButtonWhenToDisplay */
		/*  */
		this-object:cboButtonWhenToDisplay:DropDownWidth = 176.
		this-object:cboButtonWhenToDisplay:Location = new System.Drawing.Point(12, 133).
		this-object:cboButtonWhenToDisplay:Name = "cboButtonWhenToDisplay".
		this-object:cboButtonWhenToDisplay:Size = new System.Drawing.Size(176, 21).
		this-object:cboButtonWhenToDisplay:TabIndex = 11.
		this-object:cboButtonWhenToDisplay:SelectedIndexChanged:subscribe(this-object:cboButtonWhenToDisplay_SelectedIndexChanged).
		/*  */
		/* lblColumnStyle */
		/*  */
		this-object:lblColumnStyle:Location = new System.Drawing.Point(12, 69).
		this-object:lblColumnStyle:Name = "lblColumnStyle".
		this-object:lblColumnStyle:Size = new System.Drawing.Size(152, 16).
		this-object:lblColumnStyle:TabIndex = 14.
		this-object:lblColumnStyle:Text = "Select colum style to show:".
		this-object:lblColumnStyle:UseCompatibleTextRendering = true.
		/*  */
		/* chkAutoEdit */
		/*  */
		this-object:chkAutoEdit:Location = new System.Drawing.Point(12, 53).
		this-object:chkAutoEdit:Name = "chkAutoEdit".
		this-object:chkAutoEdit:Size = new System.Drawing.Size(176, 16).
		this-object:chkAutoEdit:TabIndex = 13.
		this-object:chkAutoEdit:Text = "Auto Edit".
		this-object:chkAutoEdit:UseCompatibleTextRendering = true.
		this-object:chkAutoEdit:CheckedChanged:subscribe(this-object:chkAutoEdit_CheckedChanged).
		/*  */
		/* UltraGrid1 */
		/*  */
		this-object:UltraGrid1:Anchor = cast(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Bottom), System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		this-object:UltraGrid1:Location = new System.Drawing.Point(12, 160).
		this-object:UltraGrid1:Name = "UltraGrid1".
		this-object:UltraGrid1:Size = new System.Drawing.Size(782, 261).
		this-object:UltraGrid1:TabIndex = 16.
		this-object:UltraGrid1:Text = "UltraWinGrid Column Styles".
		this-object:UltraGrid1:InitializeLayout:subscribe(this-object:UltraGrid1_InitializeLayout).
		/*  */
		/* uddStateList */
		/*  */
		this-object:uddStateList:Location = new System.Drawing.Point(216, 133).
		this-object:uddStateList:Name = "uddStateList".
		this-object:uddStateList:Size = new System.Drawing.Size(75, 23).
		this-object:uddStateList:TabIndex = 17.
		this-object:uddStateList:Text = "ultraDropDown1".
		this-object:uddStateList:Visible = false.
		/*  */
		/* lblButtonDisplayed */
		/*  */
		this-object:lblButtonDisplayed:Location = new System.Drawing.Point(12, 114).
		this-object:lblButtonDisplayed:Name = "lblButtonDisplayed".
		this-object:lblButtonDisplayed:Size = new System.Drawing.Size(152, 16).
		this-object:lblButtonDisplayed:TabIndex = 18.
		this-object:lblButtonDisplayed:Text = "Select when button displays:".
		this-object:lblButtonDisplayed:UseCompatibleTextRendering = true.
		/*  */
		/* frmColumnStyles */
		/*  */
		this-object:ClientSize = new System.Drawing.Size(806, 425).
		this-object:Controls:Add(this-object:lblButtonDisplayed).
		this-object:Controls:Add(this-object:uddStateList).
		this-object:Controls:Add(this-object:UltraGrid1).
		this-object:Controls:Add(this-object:chkAutoFillToColumn).
		this-object:Controls:Add(this-object:cboColumnStyle).
		this-object:Controls:Add(this-object:lblDescription).
		this-object:Controls:Add(this-object:cboButtonWhenToDisplay).
		this-object:Controls:Add(this-object:lblColumnStyle).
		this-object:Controls:Add(this-object:chkAutoEdit).
		this-object:Controls:Add(this-object:btnTitle).
		this-object:Name = "frmColumnStyles".
		this-object:Text = "ColumnStyles".
		this-object:Load:subscribe(this-object:frmColumnStyles_Load).
		this-object:FormClosing:subscribe(this-object:frmColumnStyles_FormClosing).
		cast(this-object:UltraGrid1, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:uddStateList, System.ComponentModel.ISupportInitialize):EndInit().
		this-object:ResumeLayout(false).

	end method.



    /* implements ISamplesBase interface  */
    method public void ShowMe( owner as System.Windows.Forms.Form  ):
/*		InitializeForm().*/
	    if (owner <> ?) then
			this-object:Owner = owner.
		this-object:Show().
	    this-object:CancelButton = btnTitle.
        this-object:CenterToScreen().
		this-object:MaximizeBox = true.
	end.	

    /* implements ISamplesBase interface  */
    method public void HideMe( ):
        this-object:Hide().   
    end.
    
    method private void InitializeForm():
		this-object:chkAutoFillToColumn:Checked = false.

		this-object:UltraGrid1:ResetDisplayLayout().

 		this-object:InitVariables(). 
/*                               */
/*			PopulateArrays().           */

		cboColumnStyle:DisplayMember = "Column Style".

		cboColumnStyle:Items:Clear( ).
			
		for each ttItem:
		    cboColumnStyle:Items:Add(ttItem.name).
	 	end.  
	 	  
		this-object:PopulateButtonStyleCombo(). 
		
		this-object:CreateColumnStyleRecordset(). 
	    
	    this-object:IntializeValueLists().
	
		this-object:PopulateRecordset().

		this-object:BindDropdownStateList().
		
		this-object:UltraGrid1:SetDataBinding(fDataSet, "ColumnStyles").
    
        this-object:UltraGrid1:PerformLayout().
		 
		this-object:UltraGrid1:Refresh().
       
    end.
    
    method private void BindDropdownStateList():
         
	    uddStateList:DataSource = this-object:bindingSource_State.
 
 		uddStateList:ValueMember = "State".       
        uddStateList:DisplayMember = "StateName". 
		 
    end method.
      
    method private void PopulateButtonStyleCombo(): 	
     	define variable i as integer no-undo.
        define variable type as System.Type.
       	define variable columnTypeNames as character no-undo extent.
       
        this-object:cboButtonWhenToDisplay:Items:Clear().
        /* TODO find the right way to convert from System.String[] to character extent */           
        type = Progress.Util.TypeHelper:GetType("Infragistics.Win.UltraWinGrid.ButtonDisplayStyle").            
        columnTypeNames = System.Enum:GetNames(type). 
        do i = 1 to extent(columnTypeNames):                                                                                                       
           cboButtonWhenToDisplay:Items:Add(columnTypeNames[i]).
        end.
    end.
     
    method private void InitVariables():	
		define variable i as integer no-undo.
        define variable type as System.Type no-undo.
        define variable columnTypeNames as character no-undo extent.
	
        /* TODO fix to use direct conversion from extent to array when supported.. */           
        type = Progress.Util.TypeHelper:GetType("Infragistics.Win.UltraWinGrid.ColumnStyle").            
        
        columnTypeNames = System.Enum:GetNames(type).
        
        do i = 1 to extent(columnTypeNames):                                                                                                       
            create ttItem.
            assign 
                ttItem.Name = columnTypeNames[i]
                ttItem.Seq  = i
                ttItem.EnumInt = i - 1. /* 0 based enum */
        end.
        create ttItem.
        assign 
            ttItem.name = ULTRA_DROPDOWN
            ttItem.Seq  = i
            ttItem.EnumInt = 0.
        
    end method.
    
    method private void CreateColumnStyleRecordset():
		define variable names as character extent no-undo.
        define variable dataType as System.Type no-undo.
        define variable dsTable as System.Data.DataTable no-undo.
        define variable dsColumn as System.Data.DataColumn no-undo.
       
        this-object:fDataSet = new System.Data.DataSet().
        dsTable = new System.Data.DataTable("ColumnStyles").     
		for each ttItem:
	        dataType = GetDataTypeforValue(ttItem.name).
            dsColumn = dsTable:Columns:Add(ttItem.Name, dataType).
        end. 
        
        fDataSet:Tables:Add( dsTable ).
	end method.
    
    /* C# private void GetDataTypeForValue( Infragistics.Win.UltraWinGrid.ColumnStyle columnStyle, ref Type dataType, ref int fieldLen )*/	
    method protected System.Type GetDataTypeForValue(columnStyle as char):
		/* this is a parameter in the original, seems to not be used, but 
		   keeping for now */ 
		def var fieldLen as int no-undo. 
		def var dataType as System.Type no-undo.
		case columnStyle:
		    
	        when "EditButton" then 
		        assign
                    dataType = Progress.Util.TypeHelper:GetType("System.Decimal")
                    fieldLen = 0.
		    when "Edit" then 
		        assign
                    dataType = Progress.Util.TypeHelper:GetType("System.String")
                    fieldLen = 512.
	    	when "DropDownValidate" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.Int32")  /* int in original */
				    fieldLen = 512.
	 		when "DropDownList" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.String")  
				    fieldLen = 512.
			when "DropDownCalendar" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.DateTime")
                    fieldLen = 0.
			when "DropDown" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.String") 
				    fieldLen = 512.
			when "Default" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.String") 
				    fieldLen = 1028.
			when "CheckBox" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.Boolean") 
				    fieldLen = 0.
			when "Button" then
				assign 
				    dataType = Progress.Util.TypeHelper:GetType("System.String") 
				    fieldLen = 128.
			when "Date" then
		 		dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "DateWithoutDropDown" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "DateWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "DateTime" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "DateTimeWithoutDropDown" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "DateTimeWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "Color" then
				dataType = Progress.Util.TypeHelper:GetType("System.Drawing.Color").
			when "Currency" then
				dataType = Progress.Util.TypeHelper:GetType("System.Decimal").
			when "CurrencyNonNegative" then
				dataType = Progress.Util.TypeHelper:GetType("System.Decimal").
			when "CurrencyPositive" then
				dataType = Progress.Util.TypeHelper:GetType("System.Decimal").
			when "Double" then
				dataType = Progress.Util.TypeHelper:GetType("System.Double").
			when "DoubleWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.Double").
			when "DoubleNonNegative" then
				dataType = Progress.Util.TypeHelper:GetType("System.Double").
			when "DoubleNonNegativeWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.Double").
			when "DoublePositive" then
				dataType = Progress.Util.TypeHelper:GetType("System.Double").
			when "DoublePositiveWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.Double").
			when "Font" then
				dataType = Progress.Util.TypeHelper:GetType("System.String").
			when "Image" then
				dataType = Progress.Util.TypeHelper:GetType("System.Drawing.Bitmap").
			when "ImageWithShadow" then
				dataType = Progress.Util.TypeHelper:GetType("System.Drawing.Bitmap").
			when "Integer" then
				dataType = Progress.Util.TypeHelper:GetType("System.Int32").
			when "IntegerWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.Int32").
			when "IntegerPositive" then
				dataType = Progress.Util.TypeHelper:GetType("System.Int32").
			when "IntegerPositiveWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.Int32").
			when "IntegerNonNegative" then
				dataType = Progress.Util.TypeHelper:GetType("System.Int32").
			when "IntegerNonNegativeWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.Int32").
			when "Time" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "TimeWithSpin" then
				dataType = Progress.Util.TypeHelper:GetType("System.DateTime").
			when "TimeZone" then
				dataType = Progress.Util.TypeHelper:GetType("System.String").
            when "TrackBar" then
                dataType = Progress.Util.TypeHelper:GetType("System.Int32").  /* int in original */
            otherwise
                dataType = Progress.Util.TypeHelper:GetType("System.String").
		end.  
        return dataType.
	end method.
    
    method private void PopulateRecordset():
        /* this routine is used to dynamically create a recordset containing 100 */
        /*rows of data. Almost all of the field values are randomly generated.  */
        define variable dsTable as System.Data.DataTable no-undo.
        define variable dsColumn as System.Data.DataColumn no-undo.	 
		define variable dsRow as System.Data.DataRow no-undo.
		define variable salesReps as Infragistics.Win.ValueListItemsCollection no-undo.
        define variable iRow as integer no-undo. 
   	    define variable iFld as integer no-undo. 
   	    define variable i as integer no-undo.
   	     
        dsTable = fDataset:Tables["ColumnStyles"].
       
   	    salesReps =  UltraGrid1:DisplayLayout:ValueLists["SalesRep"]:ValueListItems.
   	    
		do iRow = 0 to 100 - 1:
       	    dsRow = dsTable:NewRow().
       	    do iFld = 0 to dsTable:Columns:Count - 1:
                case dsTable:Columns[iFld]:Columnname: 
   					when "Default" then do:  
   					    i = random(0,salesreps:Count - 1). 
					    dsRow[iFld] = salesReps:getItem(i). 
					end.
					when "Edit" then do:  
						dsRow[iFld] = salesReps:getItem(random(0,salesreps:Count - 1)).
					end.
					when "EditButton" then do:  
						dsRow[iFld] = random(-12346589,12346589) / random(1,12349).
					end.
					when "CheckBox" then do:  
						dsRow[iFld] = random(0,1) = 0.
					end.
				    when "TriStateCheckBox" then do:  
						dsRow[iFld] = if random(0,1) = 0 then true
                                      else if random(0,1) = 0 then false 
                                      else ?.
					end.
					when "DropDown" then do:
						dsRow[iFld] = salesReps:getItem(random(0,salesreps:Count - 1)).
					end.
					when "DropDownList" then do: 
						dsRow[iFld] = salesReps:getItem(random(0,salesreps:Count - 1)).
					end.
					when "DropDownValidate" then do:
						 dsRow[iFld] = random(0,99).  
					end.
					when "Button" then do: 
						dsRow[iFld] = "Press Me".
					end.
					when "Date" or
					when "DateWithoutDropDown" or
					when "DateWithSpin" or
					when "DateTime" or
					when "DateTimeWithoutDropDown" or
					when "DateTimeWithSpin" or
					when "DropDownCalendar" then 
					do: 						
						dsRow[iFld] = datetime(today + random(-365,365))
						                       + random(0,100000).
					end.
					when "Color" then do:
						dsRow[iFld] = System.Drawing.Color:FromArgb( random(1,255),random(1,255),random(1,255) ).
					end.
					when "Currency" then do:
						dsRow[iFld] = random(-12345678.00,12345678.00) + (random(1,100) / 100).
					end.
					when "CurrencyNonNegative" then do:
						dsRow[iFld] =  random(0,12345678.00) + (random(1,100) / 100).
					end.
					when "CurrencyPositive" then do:
						dsRow[iFld] = random(1,12345678.00) + (random(1,100) / 100).
					end.
					when "Double" or
					when "DoubleWithSpin" then do:
						dsRow[iFld] = random(-12345678.99,12345678.99) + (random(1,100) / 100).
    				end.
					when "DoubleNonNegativeWithSpin" or
					when "DoubleNonNegative" then do:
						dsRow[iFld] =  random(0,12345678.00) + (random(1,100) / 100).
					end.
					when "DoublePositiveWithSpin" or
					when "DoublePositive" then do:
						dsRow[iFld] = random(1,12345678.00) + (random(1,100) / 100).
					end.
					when "Font" then do:
						dsRow[iFld] = this-object:Font:Name.
					end.
					when "ImageWithShadow" or
					when "Image" then do:
			            dsRow[iFld] = System.Drawing.SystemIcons:Information:ToBitmap( ).
					end.
					when "IntegerWithSpin" or
					when "Integer" then do:
						dsRow[iFld] = random(-99999,99999).
					end.
					when "IntegerPositiveWithSpin" or
					when "IntegerPositive" then do:
						dsRow[iFld] = random(1,99999).
					end.
					when "IntegerNonNegativeWithSpin" or
					when "IntegerNonNegative" then do:
						dsRow[iFld] = random(0,99999).
					end.
					when "Time" or
					when "TimeWithSpin" then do:
						dsRow[iFld] = now + random(0,360 * 24) * 10000.
					end.
					when "TimeZone" then do:
						dsRow[iFld] = System.TimeZone:CurrentTimeZone:StandardName.
					end.
					when "URL" then do:
						dsRow[iFld] = entry(random(1,3),"http://www.Infragistics.com,http://www.Progress.com,http://www.psdn.com"). 
					end.
					when "FormattedText" or
                    when "FormattedTextEditor" then do:
						dsRow[iFld] = "<font color=~"Red~"><b>bold</b></font> <font color=~"Olive~"><i>italic</i></font> <font color=~"Green~"><u>underline</u></font>".
					end.
                    when "TrackBar" then do:
                        dsRow[iFld] =  random(0, 11).
                    end.

					when ULTRA_DROPDOWN then
                    do:
 						dsRow[iFld] = entry(random(1,5),"NH,MA,VT,ME,NY").
					end.
                end case.
		    end.
			dsTable:Rows:Add(dsRow).
			dsRow:AcceptChanges().
		end.
		dsTable:AcceptChanges().
	end method.	
       
    method private void InitializeDataSources():  
        
        fSalesrepDataSource = new DataServices.SalesrepService().                  
        fSalesrepDataSource:fetchData().                                           
 
       
        fStateDataSource = new DataServices.StateService().
        fStateDataSource:fetchData().
        bindingSource_State = new Progress.Data.BindingSource().
        bindingSource_State:Handle = fStateDataSource:DataSetHandle.        
    end.   
      
    method private void IntializeValueLists():
		define variable lists as Infragistics.Win.ValueListsCollection no-undo.
		define variable valueList as Infragistics.Win.ValueList no-undo.
		define variable i     as integer no-undo.
		 
		lists = UltraGrid1:DisplayLayout:ValueLists.
        
		valueList = lists:Add("DropDownValidate").
        
        do i = 1 to 100: 
			valueList:ValueListItems:Add(i - 1,string(i)).
		end.
		
		valueList = fSalesrepDataSource:ValueList("eSalesrep","SalesRep","RepName").
        valueList:Key = "SalesRep". 
        lists:Add(valueList).
        
    end.       
      
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID chkAutoEdit_CheckedChanged(sender AS System.Object, e AS System.EventArgs ):
		define variable isChecked as logical no-undo.
        define variable band as Infragistics.Win.UltraWinGrid.UltraGridBand no-undo.
		ischecked = chkAutoEdit:Checked. 
		band = this-object:UltraGrid1:DisplayLayout:Bands[0].
		band:Columns["DropDownValidate"]:AutoEdit = isChecked.
		band:Columns["DropDown"]:AutoEdit = isChecked.
		band:Columns["Edit"]:AutoEdit = isChecked.
	    band:Columns[ULTRA_DROPDOWN]:AutoEdit = isChecked. 

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID UltraGrid1_InitializeLayout( INPUT sender AS System.Object, INPUT evtArgs AS Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs ):
 		define buffer ei for ttItem. 
 		define variable type as System.Type.
 		define variable columnStyle as Infragistics.Win.UltraWinGrid.ColumnStyle no-undo.
        define variable band as Infragistics.Win.UltraWinGrid.UltraGridBand no-undo.
    	/* set the style for each column */
		for each ei where ei.name <> ULTRA_DROPDOWN:
	        type = Progress.Util.TypeHelper:GetType("Infragistics.Win.UltraWinGrid.ColumnStyle"). 
	        
		    columnStyle = cast(System.Enum:ToObject(type,ei.EnumInt),Infragistics.Win.UltraWinGrid.ColumnStyle).
 	 	    evtArgs:Layout:Bands[0]:Columns[ei.Name]:Style = columnStyle.
		end.
        
        if (cboColumnStyle:Items:Count > 0) then
			cboColumnStyle:SelectedIndex = 0.
         
		evtArgs:Layout:Override:RowSizingArea = Infragistics.Win.UltraWinGrid.RowSizingArea:EntireRow.
         
        /* create an appearance object used to highlight the header of the activecell's column*/
		
		if not (evtArgs:Layout:Appearances:Exists("Activated")) then
        do:
			evtArgs:Layout:Appearances:Add("Activated").
			evtArgs:Layout:Appearances["Activated"]:BackColor = System.Drawing.Color:Black.
			evtArgs:Layout:Appearances["Activated"]:ForeColor = System.Drawing.Color:White.
		end.
		
		band = evtArgs:Layout:Bands[0].
  		band:Override:CellAppearance:BackColor =  System.Drawing.Color:LightGray.
		/* assign valuelists */
		
		band:Columns["DropDownValidate"]:ValueList = evtArgs:Layout:ValueLists["DropDownValidate"].
		band:Columns["DropDownList"]:ValueList = evtArgs:Layout:ValueLists["SalesRep"].
		band:Columns["DropDown"]:ValueList = evtArgs:Layout:ValueLists["SalesRep"].
		band:Columns["Edit"]:ValueList = evtArgs:Layout:ValueLists["SalesRep"].
        band:Columns[ULTRA_DROPDOWN]:ValueList = uddStateList.
          
        /* initialize the autoedit property */
		band:Columns["DropDownValidate"]:AutoEdit = false.
		band:Columns["DropDown"]:AutoEdit = false.
		band:Columns["Edit"]:AutoEdit = false.
        band:Columns[ULTRA_DROPDOWN]:AutoEdit = false.
                 
        /* Since the "DropDownCalendar" column is actually of type string (and not DateTime),                   */
        /* let's apply an appropriate DateTime mask; otherwise, the embeddable editor will assume               */
        /* we want to use a standard string mask, since the data type is string.                                */
        /* Also, let's set the appropriate mask modes to use literals so that the "/" characters are included in*/
        /* the data that is interpreted by the editor (MaskDataMode), and also so that what we display          */
        /* looks more like a DateTime.                                                                          */
		evtArgs:Layout:Bands[0]:Columns["DropDownCalendar"]:MaskInput = "mm/dd/yyyy".
		evtArgs:Layout:Bands[0]:Columns["DropDownCalendar"]:MaskDataMode = Infragistics.Win.UltraWinMaskedEdit.MaskMode:IncludeLiterals.
		evtArgs:Layout:Bands[0]:Columns["DropDownCalendar"]:MaskDisplayMode = Infragistics.Win.UltraWinMaskedEdit.MaskMode:IncludeLiterals.

        /* Set the MinValue and MaxValue on the TrackBar column */
        evtArgs:Layout:Bands[0]:Columns["TrackBar"]:MinValue = 0.
        evtArgs:Layout:Bands[0]:Columns["TrackBar"]:MaxValue = 10.
 
		/* Set the scroll style to immediate so the rows get scrolled immediately */
		/* when the vertical scrollbar thumb is dragged. */
		evtArgs:Layout:ScrollStyle = Infragistics.Win.UltraWinGrid.ScrollStyle:Immediate.

        /* ScrollBounds of ScrollToFill will prevent the user from scrolling the */
        /* grid further down once the last row becomes fully visible.           */
		evtArgs:Layout:ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds:ScrollToFill.
           
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
    METHOD PRIVATE VOID cboButtonWhenToDisplay_SelectedIndexChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    define variable btnStyle as Infragistics.Win.UltraWinGrid.ButtonDisplayStyle no-undo.
	    define variable type as System.Type.
        define variable i  as integer no-undo. 
        define variable gridColumn as Infragistics.Win.UltraWinGrid.UltraGridColumn no-undo.
	    
	    if cboButtonWhenToDisplay:SelectedIndex = -1  then
			return.

        type = Progress.Util.TypeHelper:GetType("Infragistics.Win.UltraWinGrid.ButtonDisplayStyle"). 
	        
	    btnStyle = cast(System.Enum:ToObject(type,cboButtonWhenToDisplay:SelectedIndex),Infragistics.Win.UltraWinGrid.ButtonDisplayStyle).
        do i = 0 to UltraGrid1:DisplayLayout:Bands[0]:Columns:count - 1:
		    gridColumn = cast(UltraGrid1:DisplayLayout:Bands[0]:Columns:getItem(i),Infragistics.Win.UltraWinGrid.UltraGridColumn).
		    gridColumn:ButtonDisplayStyle = btnStyle.
		end.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID chkAutoFillToColumn_CheckedChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
     	/** This doesn't seem to work as intended 
     	    - the same problem exists in the original c# example.   
     	    Checked - the resize makes the columns very small.
     	    Unchecked - Throws exception   */
     	 
     	
     	if chkAutoFillToColumn:Checked then
        do:
            UltraGrid1:DisplayLayout:Save(fOldLayoutStream).
        	UltraGrid1:DisplayLayout:AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle:ResizeAllColumns.		
		end.
		else do:
			fOldLayoutStream:Position = 0.
			UltraGrid1:DisplayLayout:AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle:None.
			UltraGrid1:DisplayLayout:Load(fOldLayoutStream).
		end.
        return.
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cboColumnStyle_SelectedIndexChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		/* combo controls which column is scrolled into view */

		UltraGrid1:ActiveColScrollRegion:ScrollColIntoView(UltraGrid1:DisplayLayout:Bands[0]:Columns[cboColumnStyle:Text], true).
        if (UltraGrid1:ActiveRow <> ?) then
			UltraGrid1:ActiveCell = UltraGrid1:ActiveRow:Cells[cboColumnStyle:Text].

        case cboColumnStyle:Text:
        		when "Default" then
					lblDescription:Text = "Description: Use the default style.".
				when "Edit" then
					lblDescription:Text = "Description: Text box style.".
				when "EditButton" then
					lblDescription:Text = "Description: Edit button style that has a text box as well as a button that users can click on.".
				when "CheckBox" then
					lblDescription:Text = "Description: Checkbox style that is not a tri-state checkbox.".
				when "TriStateCheckBox" then
					lblDescription:Text = "Description: Tri-state checkbox style.".
				when "DropDown" then
					lblDescription:Text = "Description: Drop down combobox style that has a text box and a small drop down button that users can click on to display a drop down list to select items from.".
				when "DropDownList" then
					lblDescription:Text = "Description: Drop down list style that has a small drop down button that users can click on to display a drop down list from which they can select an item.".
				when "DropDownValidate" then
					lblDescription:Text = "Description: Same as DropDown style except that it will not allow the user to enter text in the combobox' edit box that does not match any one of the values in the value list.".
				when "Button" then
					lblDescription:Text = "Description: Button style that has a button occupying the whole area of the cell. when the user clicks on the button ClickCellButton event is fired.".
				when "DropDownCalendar" then
					lblDescription:Text = "Description: Drop down calendar style that has a drop down arrow that users can click on to display a drop down calendar for selecting a date.".
				when "DropDown/Multi-column bound dropdown" then
					lblDescription:Text = "Description: Same as DropDown except the multi-column bound data is used.".
				otherwise
					lblDescription:Text = "Description:".

        end.
        UltraGrid1:Focus().
	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD Protected VOID btnTitle_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
        if valid-object(this-object:Owner) then
            HideMe().
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD Protected VOID btnTitle_MouseUp( INPUT sender AS System.Object, INPUT e AS System.Windows.Forms.MouseEventArgs ):
		if valid-object(this-object:Owner) then
		    (cast (this-object:Owner,frmMain)):Navigation(e:Button).
		RETURN.

	END METHOD.
	
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID frmColumnStyles_Load( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		fOldLayoutStream = new System.IO.MemoryStream().
		RETURN.

	END METHOD.
	
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID frmColumnStyles_FormClosing( INPUT sender AS System.Object, INPUT e AS System.Windows.Forms.FormClosingEventArgs ):
		if valid-object(this-object:Owner) then 
	    do:
	        e:Cancel = true.
		    this-object:Visible = false.
		end.
		RETURN.

	END METHOD.
 

 END CLASS.