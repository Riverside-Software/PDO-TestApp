 /* 
ABL example derived from Infragistics source, copyright ©1992-2008 Infragistics, 
Inc., Windsor Corporate Park, 50 Millstone Road, Building 200 Suite 150, East 
Windsor, NJ 08520. All rights reserved.
*/
 /*------------------------------------------------------------------------
    File        : frmUltraDataSource2
    Purpose     : 
    Syntax      : 
    Description : 
    Author(s)   : hdaniels - copied/transformed from Infragistic sample
    Created     : Sun Jun 01 18:10:44 EDT 2008
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*.
USING Progress.Windows.Form.

using WinGrid.SamplesExplorer.*.

CLASS WinGrid.SamplesExplorer.frmUltraDataSource2 INHERITS Form implements ISamplesBase : 
	
	DEFINE PRIVATE VARIABLE components AS System.ComponentModel.IContainer.


	define private variable UltraGrid1 as Infragistics.Win.UltraWinGrid.UltraGrid no-undo.
	define public variable lblDescription as System.Windows.Forms.Label no-undo.
	define public variable btnTitle as System.Windows.Forms.Button no-undo.


	define private variable ultraDataSource1 as Infragistics.Win.UltraWinDataSource.UltraDataSource no-undo.
	
	/* manual defs*/
	
	define temp-table ttList no-undo
        field id    as integer  
        field name  as char  
     index id as unique id.
     
    define query fqData for ttList scrolling.
     
	/* Provides a description for the sample. */
	define public property Description as character no-undo 
	get:
	    return lblDescription:Text.
	end.
	
    /* Name of the sample. */
	define public property SampleName as character no-undo
    get:
        return btnTitle:Text. 
    end.
	
    /* Type of sample. */
	define public property SampleType as character no-undo
	get:
	    return "Feature".
	end.    

	/* Preview Picture for Sample */
	define public property PreviewPicture as System.Drawing.Image no-undo
    get:
        return System.Drawing.Image:FromFile( SamplesPath:GraphicsPath + "/Previews/UltraDataSource2.png").
    end.  
	
	CONSTRUCTOR PUBLIC frmUltraDataSource2 (  ):
		
		SUPER().
		InitializeComponent ( ).

	END CONSTRUCTOR.

	DESTRUCTOR PUBLIC frmUltraDataSource2 ( ):

		IF VALID-OBJECT(components) THEN DO:
			CAST(components, System.IDisposable):Dispose().
		END.

	END DESTRUCTOR.

	












	method private void InitializeComponent ( ):

/* 		NOTE: The following method is generated by the OpenEdge Advanced GUI Visual Designer.

		We strongly suggest that the contents of this method only be modified using the
		Visual Designer to avoid any incompatible modifications.

		Modifying the contents of this method using a code editor will invalidate any support for this file. */

		this-object:components = new System.ComponentModel.Container().
		this-object:UltraGrid1 = new Infragistics.Win.UltraWinGrid.UltraGrid().
		this-object:lblDescription = new System.Windows.Forms.Label().
		this-object:btnTitle = new System.Windows.Forms.Button().
		this-object:ultraDataSource1 = new Infragistics.Win.UltraWinDataSource.UltraDataSource(this-object:components).
		cast(this-object:UltraGrid1, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:ultraDataSource1, System.ComponentModel.ISupportInitialize):BeginInit().
		this-object:SuspendLayout().
		/*  */
		/* UltraGrid1 */
		/*  */
		this-object:UltraGrid1:Anchor = cast(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Bottom), System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		this-object:UltraGrid1:Cursor = System.Windows.Forms.Cursors:Default.
		this-object:UltraGrid1:Location = new System.Drawing.Point(0, 51).
		this-object:UltraGrid1:Name = "UltraGrid1".
		this-object:UltraGrid1:Size = new System.Drawing.Size(704, 448).
		this-object:UltraGrid1:TabIndex = 21.
		this-object:UltraGrid1:BeforeRowFilterDropDownPopulate:subscribe(this-object:UltraGrid1_BeforeRowFilterDropDownPopulate).
		this-object:UltraGrid1:InitializeLayout:subscribe(this-object:UltraGrid1_InitializeLayout).
		this-object:UltraGrid1:AfterSortChange:subscribe(this-object:UltraGrid1_AfterSortChange).
		/*  */
		/* lblDescription */
		/*  */
		this-object:lblDescription:Anchor = cast(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		this-object:lblDescription:Location = new System.Drawing.Point(0, 35).
		this-object:lblDescription:Name = "lblDescription".
		this-object:lblDescription:Size = new System.Drawing.Size(704, 16).
		this-object:lblDescription:TabIndex = 20.
		this-object:lblDescription:Text = "This sample demonstrates a DataSource used in virtual mode.".
		this-object:lblDescription:UseCompatibleTextRendering = true.
		/*  */
		/* btnTitle */
		/*  */
		this-object:btnTitle:Dock = System.Windows.Forms.DockStyle:Top.
		this-object:btnTitle:FlatStyle = System.Windows.Forms.FlatStyle:Flat.
		this-object:btnTitle:Font = new System.Drawing.Font("Arial", 14.25, System.Drawing.FontStyle:Bold, System.Drawing.GraphicsUnit:Point, Progress.Util.CastUtil:ToByte(0)).
		this-object:btnTitle:Location = new System.Drawing.Point(0, 0).
		this-object:btnTitle:Name = "btnTitle".
		this-object:btnTitle:Size = new System.Drawing.Size(704, 32).
		this-object:btnTitle:TabIndex = 19.
		this-object:btnTitle:Text = "DataSource".
		this-object:btnTitle:TextAlign = System.Drawing.ContentAlignment:MiddleLeft.
		this-object:btnTitle:UseCompatibleTextRendering = true.
		this-object:btnTitle:Click:subscribe(this-object:btnTitle_Click).
		this-object:btnTitle:MouseUp:subscribe(this-object:btnTitle_MouseUp).
		/*  */
		/* ultraDataSource1 */
		/*  */
		this-object:ultraDataSource1:CellDataRequested:subscribe(this-object:ultraDataSource1_CellDataRequested).
		/*  */
		/* frmUltraDataSource2 */
		/*  */
		this-object:ClientSize = new System.Drawing.Size(704, 502).
		this-object:Controls:Add(this-object:UltraGrid1).
		this-object:Controls:Add(this-object:lblDescription).
		this-object:Controls:Add(this-object:btnTitle).
		this-object:Name = "frmUltraDataSource2".
		this-object:Text = "UltraDataSource2".
		this-object:Load:subscribe(this-object:frmUltraDataSource2_Load).
		this-object:FormClosing:subscribe(this-object:frmUltraDataSource2_FormClosing).
		cast(this-object:UltraGrid1, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:ultraDataSource1, System.ComponentModel.ISupportInitialize):EndInit().
		this-object:ResumeLayout(false).
	end method.



	method private character GetRandomString( len as int):
		define variable i as int no-undo.
        define variable c as char no-undo.
        
        do i = 1 to len:
            c = c + chr(random(asc("A"),asc("Z"))).
        end.
		return c.
	end method.

    /* implements ISamplesBase interface  */
    method public void ShowMe( owner as System.Windows.Forms.Form  ):
/*		InitializeForm().*/
	    if (owner <> ?) then
			this-object:Owner = owner.
		this-object:Show().
	    this-object:CancelButton = btnTitle.
        this-object:CenterToScreen().
		this-object:MaximizeBox = true.
	end method.	

    /* implements ISamplesBase interface. */
    method public void HideMe( ):
        this-object:Hide().   
    end.
    

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID btnTitle_MouseUp( INPUT sender AS System.Object, INPUT e AS System.Windows.Forms.MouseEventArgs ):
		if valid-object(this-object:Owner) then
		    (cast (this-object:Owner,frmMain)):Navigation(e:Button).
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID frmUltraDataSource2_Load( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    
	    /* For the demonstration purposes we will use the an array list to represent */
		/* external data. Initialize it with some random data. */
		define variable i as int no-undo.
        do i = 1 to 10000:
           create ttList.
           assign
               ttList.id = i 
               ttList.name = GetRandomString( 10 ).
        end.
      
		/* Add two columns, one ID column of type int and a second Text column */
		/* of type string. */
		ultraDataSource1:Band:Columns:Add( "ID", Progress.Util.TypeHelper:GetType("System.Int")).
		/* Make id column read-only: */
		ultraDataSource1:Band:Columns[ "ID" ]:ReadOnly = Infragistics.Win.DefaultableBoolean:True.
		ultraDataSource1:Band:Columns:Add( "Text", Progress.Util.TypeHelper:GetType("System.String")).

		open query fqData preselect each ttList indexed-reposition.
		/* Set the row count: This is how many rows we will have: */
 		ultraDataSource1:Rows:SetCount(10000). 

		/* Set the LoadStyle to LoadOnDemand so the UltraGrid doesn't pre-load  */
		/* all the rows: LoadOnDemand load style creates rows as they are needed */
		/* (for example when they are scrolled into view). You must do this */
		/* before setting the DataSource on the UltraGrid. */
		UltraGrid1:DisplayLayout:LoadStyle = Infragistics.Win.UltraWinGrid.LoadStyle:LoadOnDemand.
		UltraGrid1:DataSource = ultraDataSource1.

		/* We will do our own sorting. In order for UltraGrid to sort, it needs to */
		/* load all the rows. To avoid this, set HeaderClickAction to ExternalSortSingle */
		/* or ExternalSortMulti. We will have to hook into the UltraGrid's AfterSortChange */
		/* and resort the gridData array list. */
		UltraGrid1:DisplayLayout:Override:HeaderClickAction = Infragistics.Win.UltraWinGrid.HeaderClickAction:ExternalSortMulti.

		/* Turn on the row filtering on Text column. When row-filtering is turned on and  */
		/* the user goes to drop down the filter drop-down, UltraGrid will create all the */ 
		/* rows in order to pupulate the filter drop-down with the cell values. This may */ 
		/* take a while if there are a lot of rows. To avoid this we are hooking into the */
		/* BeforeRowFilterDropDownPopulate event and populating the filter drop-down */
		/* ourselves. */
		  
		UltraGrid1:DisplayLayout:Bands[0]:Columns["Text"]:AllowRowFiltering = Infragistics.Win.DefaultableBoolean:True.
	
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID UltraGrid1_InitializeLayout( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs ):
		/* Set the scroll style to immediate so the rows get scrolled immediately */
		/* when the vertical scrollbar thumb is dragged. */
		 
		e:Layout:ScrollStyle = Infragistics.Win.UltraWinGrid.ScrollStyle:Immediate.

		/* ScrollBounds of ScrollToFill will prevent the user from scrolling the */
		/* grid further down once the last row becomes fully visible. */
		 
		e:Layout:ScrollBounds = Infragistics.Win.UltraWinGrid.ScrollBounds:ScrollToFill.
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraDataSource1_CellDataRequested( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinDataSource.CellDataRequestedEventArgs ):
		query fqData:handle:reposition-to-row(e:Row:Index + 1).
		query fqData:handle:get-next.	 
		case e:Column:Key:
			when "ID" then
			    e:Data =  ttList.id.
			
			when "Text" then
			do:
				e:Data = ttList.name.
			end.       
		end case.
		/* By default UltraDataSource will cache the provided cell value and not ask for */
		/* it next time it's needed. Set CacheData to false to prevent UltraDataSource */
		/* from doing so. */
		e:CacheData = false.
		
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID UltraGrid1_AfterSortChange( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinGrid.BandEventArgs ):
		define variable sortedColumns as Infragistics.Win.UltraWinGrid.SortedColumnsCollection no-undo.
		define variable sortColumn as Infragistics.Win.UltraWinGrid.UltraGridColumn no-undo.
		define variable i as int no-undo.
        define variable sortString as char no-undo.
        
        /* Since we set the HeaderClickAction to ExternalSortMulti, we have to */
        /* sort the underlying data source ourself. */

		/* Set the cursor to wait since it might take a while for the sort operation to complete */
		/* depending on how many items we are sorting. */
		System.Windows.Forms.Cursor:Current = System.Windows.Forms.Cursors:WaitCursor.
	    
	    /* build a sort string from the band's SortedColumns */
	    sortedColumns = e:Band:SortedColumns.
		do i = 0 to sortedColumns:Count - 1:
		    sortColumn = cast(SortedColumns:GetItem(i),Infragistics.Win.UltraWinGrid.UltraGridColumn).
		    sortString = sortString + " by ". 
		    case sortColumn:Key:
			    when "ID" then
			        sortString = sortString + "id".
			    when "Text" then
			        sortString = sortString + "name".       
		    end case.
		    if Progress.Util.EnumHelper:AreEqual(sortColumn:SortIndicator,Infragistics.Win.UltraWinGrid.SortIndicator:Descending) then
            do:
               sortString = sortString + " descending ".
            end.     
		end.
		query fqData:handle:query-prepare("preselect each ttlist" + sortString).
		query fqData:handle:query-open().
		    
        /* Notify the bound controls (in our case the UltraGrid) that it should */
		/* reload the list objects from the binding list. */
		ultraDataSource1:Rows:NotifyListReset( ).
	 
		System.Windows.Forms.Cursor:Current = System.Windows.Forms.Cursors:Default.
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID UltraGrid1_BeforeRowFilterDropDownPopulate( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinGrid.BeforeRowFilterDropDownPopulateEventArgs ):
		e:Handled = true.
 
		if e:Column:Key = "Text" then
        do: 
			/* ValueList passed int this event already contains the All, Blanks, NonBlanks and */
			/* Custom. Remove the last three.*/
			e:ValueList:ValueListItems:RemoveAt( 1 ). 
			e:ValueList:ValueListItems:RemoveAt( 1 ).
			e:ValueList:ValueListItems:RemoveAt( 1 ).

			/*  Populate the filter drop-down with four items that filter by the first */
			/*  letter of the cell value: */
			e:ValueList:ValueListItems:Add( 
				new Infragistics.Win.UltraWinGrid.FilterCondition( e:Column, Infragistics.Win.UltraWinGrid.FilterComparisionOperator:Match, "^[A-F]" ),
				"A-F" ).

			e:ValueList:ValueListItems:Add( 
				new Infragistics.Win.UltraWinGrid.FilterCondition( e:Column, Infragistics.Win.UltraWinGrid.FilterComparisionOperator:Match, "^[G-K]" ),
				"G-K" ).

			e:ValueList:ValueListItems:Add( 
				new Infragistics.Win.UltraWinGrid.FilterCondition( e:Column, Infragistics.Win.UltraWinGrid.FilterComparisionOperator:Match, "^[L-P]" ),
				"L-P" ).

			e:ValueList:ValueListItems:Add( 
				new Infragistics.Win.UltraWinGrid.FilterCondition( e:Column, Infragistics.Win.UltraWinGrid.FilterComparisionOperator:Match, "^[Q-Z]" ),
				"Q-Z" ).
		end.
		RETURN.

	END METHOD.
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID frmUltraDataSource2_FormClosing( INPUT sender AS System.Object, INPUT e AS System.Windows.Forms.FormClosingEventArgs ):
		if valid-object(this-object:Owner) then 
	    do:
	        e:Cancel = true.
		    this-object:Visible = false.
		end.
		RETURN.

	END METHOD.
	
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID btnTitle_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		if valid-object(this-object:Owner) then
            HideMe().
		RETURN.

	END METHOD.  
END CLASS.