 
 /*------------------------------------------------------------------------
    File        : ActiveRental
    Purpose     : Sample code using WinListBar
    Syntax      : 
    Description : 
    Author(s)   : rdebbage
    Created     : Thu May 29 14:10:26 CEST 2008
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*.
USING Progress.Windows.Form.
USING System.Drawing.*.


CLASS WinListBar.ActiveRental.ActiveRental INHERITS Form   : 
	
	DEFINE PRIVATE VARIABLE components AS System.ComponentModel.IContainer.

	DEFINE PUBLIC VARIABLE lblTitle AS System.Windows.Forms.Label NO-UNDO.
	DEFINE PUBLIC VARIABLE ulbRentals AS Infragistics.Win.UltraWinListBar.UltraListBar NO-UNDO.
	DEFINE PUBLIC VARIABLE ulbServices AS Infragistics.Win.UltraWinListBar.UltraListBar NO-UNDO.
	DEFINE PUBLIC VARIABLE rtbContent AS System.Windows.Forms.RichTextBox NO-UNDO.


	DEFINE PRIVATE VARIABLE smallImageList AS System.Windows.Forms.ImageList NO-UNDO.
	DEFINE PRIVATE VARIABLE largeImageList AS System.Windows.Forms.ImageList NO-UNDO.
	DEFINE PUBLIC VARIABLE Timer1 AS System.Windows.Forms.Timer NO-UNDO.
   
    DEFINE PRIVATE VARIABLE APP_TITLE_LABEL_HEIGHT AS INTEGER INIT 50 NO-UNDO.
    DEFINE PRIVATE VARIABLE SERVICES_LISTBAR_HEIGHT AS INTEGER INIT 75 NO-UNDO.
    DEFINE PRIVATE VARIABLE RENTALS_LISTBAR_WIDTH AS INTEGER INIT 100 NO-UNDO.
    
    DEFINE PRIVATE VARIABLE img AS System.Drawing.Image NO-UNDO.
    DEFINE PRIVATE VARIABLE oGroup AS Infragistics.Win.UltraWinListBar.Group NO-UNDO.
	DEFINE PRIVATE VARIABLE oItem AS Infragistics.Win.UltraWinListBar.Item NO-UNDO.
	
	DEFINE PRIVATE VARIABLE cPath AS CHARACTER NO-UNDO.
	DEFINE PRIVATE VARIABLE iGrp AS INTEGER NO-UNDO.
	DEFINE PRIVATE VARIABLE iItm AS INTEGER NO-UNDO.


	CONSTRUCTOR PUBLIC ActiveRental (  ):
		
		SUPER().
		InitializeComponent ( ).

	END CONSTRUCTOR.

	DESTRUCTOR PUBLIC ActiveRental ( ):

		IF VALID-OBJECT(components) THEN DO:
			CAST(components, System.IDisposable):Dispose().
		END.

	END DESTRUCTOR.


	/* Property containing path to resource images, docs, etc. */
	DEFINE PRIVATE PROPERTY RESOURCE_PATH AS CHARACTER NO-UNDO 
	GET.
	SET(INPUT arg AS CHARACTER) :
	    FILE-INFO:FILE-NAME = arg.
	    RESOURCE_PATH = FILE-INFO:FULL-PATHNAME + "\".		
	END SET.


	METHOD PRIVATE VOID InitializeComponent ( ):

/* 		NOTE: The following method is generated by the OpenEdge Advanced GUI Visual Designer.

		We strongly suggest that the contents of this method only be modified using the
		Visual Designer to avoid any incompatible modifications.

		Modifying the contents of this method using a code editor will invalidate any support for this file. */

		THIS-OBJECT:components = NEW System.ComponentModel.Container().
		THIS-OBJECT:lblTitle = NEW System.Windows.Forms.Label().
		THIS-OBJECT:ulbRentals = NEW Infragistics.Win.UltraWinListBar.UltraListBar().
		THIS-OBJECT:ulbServices = NEW Infragistics.Win.UltraWinListBar.UltraListBar().
		THIS-OBJECT:rtbContent = NEW System.Windows.Forms.RichTextBox().
		THIS-OBJECT:smallImageList = NEW System.Windows.Forms.ImageList(THIS-OBJECT:components).
		THIS-OBJECT:largeImageList = NEW System.Windows.Forms.ImageList(THIS-OBJECT:components).
		THIS-OBJECT:Timer1 = NEW System.Windows.Forms.Timer(THIS-OBJECT:components).
		THIS-OBJECT:SuspendLayout().
		/*  */
		/* lblTitle */
		/*  */
		THIS-OBJECT:lblTitle:Dock = System.Windows.Forms.DockStyle:Top.
		THIS-OBJECT:lblTitle:Font = NEW System.Drawing.Font("Tahoma", 14.25, System.Drawing.FontStyle:Regular, System.Drawing.GraphicsUnit:Point, Progress.Util.CastUtil:ToByte(0)).
		THIS-OBJECT:lblTitle:Location = NEW System.Drawing.Point(0, 0).
		THIS-OBJECT:lblTitle:Name = "lblTitle".
		THIS-OBJECT:lblTitle:Size = NEW System.Drawing.Size(768, 40).
		THIS-OBJECT:lblTitle:TabIndex = 14.
		THIS-OBJECT:lblTitle:Text = "Active Auto Rentals".
		THIS-OBJECT:lblTitle:TextAlign = System.Drawing.ContentAlignment:MiddleLeft.
		THIS-OBJECT:lblTitle:UseCompatibleTextRendering = TRUE.
		/*  */
		/* ulbRentals */
		/*  */
		THIS-OBJECT:ulbRentals:Dock = System.Windows.Forms.DockStyle:Left.
		THIS-OBJECT:ulbRentals:Location = NEW System.Drawing.Point(0, 40).
		THIS-OBJECT:ulbRentals:Name = "ulbRentals".
		THIS-OBJECT:ulbRentals:Size = NEW System.Drawing.Size(80, 453).
		THIS-OBJECT:ulbRentals:GroupSelected:SUBSCRIBE(THIS-OBJECT:ulbRentals_GroupSelected).
		THIS-OBJECT:ulbRentals:ItemSelected:SUBSCRIBE(THIS-OBJECT:ulbRentals_ItemSelected).
		/*  */
		/* ulbServices */
		/*  */
		THIS-OBJECT:ulbServices:Dock = System.Windows.Forms.DockStyle:Top.
		THIS-OBJECT:ulbServices:LargeImageList = THIS-OBJECT:largeImageList.
		THIS-OBJECT:ulbServices:Location = NEW System.Drawing.Point(80, 40).
		THIS-OBJECT:ulbServices:Name = "ulbServices".
		THIS-OBJECT:ulbServices:Size = NEW System.Drawing.Size(688, 48).
		THIS-OBJECT:ulbServices:SmallImageList = THIS-OBJECT:smallImageList.
		THIS-OBJECT:ulbServices:GroupSelected:SUBSCRIBE(THIS-OBJECT:ulbServices_GroupSelected).
		THIS-OBJECT:ulbServices:ItemSelected:SUBSCRIBE(THIS-OBJECT:ulbServices_ItemSelected).
		/*  */
		/* rtbContent */
		/*  */
		THIS-OBJECT:rtbContent:BackColor = System.Drawing.SystemColors:Window.
		THIS-OBJECT:rtbContent:Dock = System.Windows.Forms.DockStyle:Fill.
		THIS-OBJECT:rtbContent:Location = NEW System.Drawing.Point(80, 88).
		THIS-OBJECT:rtbContent:Name = "rtbContent".
		THIS-OBJECT:rtbContent:Size = NEW System.Drawing.Size(688, 405).
		THIS-OBJECT:rtbContent:TabIndex = 19.
		THIS-OBJECT:rtbContent:Text = "rtbContent".
		/*  */
		/* smallImageList */
		/*  */
		THIS-OBJECT:smallImageList:ColorDepth = System.Windows.Forms.ColorDepth:Depth8Bit.
		THIS-OBJECT:smallImageList:ImageSize = NEW System.Drawing.Size(16, 16).
		THIS-OBJECT:smallImageList:TransparentColor = System.Drawing.Color:Transparent.
		/*  */
		/* largeImageList */
		/*  */
		THIS-OBJECT:largeImageList:ColorDepth = System.Windows.Forms.ColorDepth:Depth8Bit.
		THIS-OBJECT:largeImageList:ImageSize = NEW System.Drawing.Size(32, 32).
		THIS-OBJECT:largeImageList:TransparentColor = System.Drawing.Color:Transparent.
		/*  */
		/* Timer1 */
		/*  */
		THIS-OBJECT:Timer1:Tick:SUBSCRIBE(THIS-OBJECT:Timer1_Tick).
		/*  */
		/* ActiveRental */
		/*  */
		THIS-OBJECT:ClientSize = NEW System.Drawing.Size(768, 493).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:rtbContent).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:ulbServices).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:ulbRentals).
		THIS-OBJECT:Controls:Add(THIS-OBJECT:lblTitle).
		THIS-OBJECT:Name = "ActiveRental".
		THIS-OBJECT:Text = "ActiveRental".
		THIS-OBJECT:Load:SUBSCRIBE(THIS-OBJECT:ActiveRental_Load).
		THIS-OBJECT:ResumeLayout(FALSE).

	END METHOD.

	
	METHOD PRIVATE VOID InitializeServicesListBar(  ):
		
		/* We want this listbar to appear horizontally */
		THIS-OBJECT:ulbServices:Orientation = Infragistics.Win.UltraWinListBar.Orientation:HORIZONTAL.
		
		/* Set Height; To change the dimensions of the control at runtime, we use the 'SetBounds' Method */
		THIS-OBJECT:ulbServices:SetBounds(THIS-OBJECT:ulbServices:Location:X, 
		                                  THIS-OBJECT:ulbServices:Location:Y, 
		                                  THIS-OBJECT:ulbServices:Width, 
		                                  SERVICES_LISTBAR_HEIGHT).
		
/*		Let's use the UltraListBar control's 'Appearance' object property*/
/*		to set things like the ImageBackground, ImageBackgroundStyle     */
        img = Image:FromFile(RESOURCE_PATH + "Bitmaps\maptile.bmp").        		
		THIS-OBJECT:ulbServices:Appearance:ImageBackground = img.
		THIS-OBJECT:ulbServices:Appearance:ImageBackgroundStyle = Infragistics.Win.ImageBackgroundStyle:Tiled.

/*      Let's set the key of the existing group, to make it easier to reference it*/
		THIS-OBJECT:ulbServices:Groups[0]:KEY = "Services".
		
/*		Change the Text property of the 'Services' group; we can now refer to the group using its key		*/
		THIS-OBJECT:ulbServices:Groups[0]:Text = "Services".
		
/*		Add another group; name it 'Locations'...                             */
/*		we'll use an overload of the 'Add' method that sets the 'Key'         */
/*		and 'Text' properties when it adds the new group, which is            */
/*		a little easier than setting the properties after the group is created*/
		THIS-OBJECT:ulbServices:Groups:Add("Locations","Locations").
		
/*      Add the Items for each group; also assign the appropriate image for each Item in the group*/
		DEFINE VARIABLE iIdx AS INTEGER INIT 0 NO-UNDO.
		DO iGrp = 0 TO THIS-OBJECT:ulbServices:Groups:Count - 1:
		    oGroup = THIS-OBJECT:ulbServices:Groups[iGrp].
		    
		    PopulateServicesListBar(oGroup).
		    
/*		    Set the Image property of each Item to its respective Icon/Bitmap.              */
/*		    Note that we made each Item's key the same as the name of its corresponding file*/
/*		    to make it easier to assign the images.                                         */

		    DO iItm = 0 TO oGroup:Items:Count - 1:
		        oItem = oGroup:Items[iItm].
		    	
		    	/* Build Path String */	    
    	        CASE oGroup:KEY:
    		    WHEN "Services" THEN
                    cPath = RESOURCE_PATH + "Icons\" + oItem:Key + ".ico".
                WHEN "Locations" THEN
                    cPath = RESOURCE_PATH + "Bitmaps\" + oItem:Key + ".bmp".
                END CASE.
                
                /* Get image from its filename */
                img = Image:FromFile(cPath). 
                
                /* Add image to the control's SmallImageList and LargeImageList collections */
                THIS-OBJECT:largeImageList:Images:Add(img).
                THIS-OBJECT:smallImageList:Images:Add(img).
                
                /* Set the Item's LargeImageIndex and SmallImageIndex properties to point to the added image */
                oItem:LargeImageIndex = iIdx.
                oItem:SmallImageIndex = iIdx.

                iIdx = iIdx + 1.
            END.
		END.
        
        /* Add an image for the 'Submit' item, which is added dynamically when certain other items are selected */
        cPath =  RESOURCE_PATH + "Icons\Submit.ico".
        img = Image:FromFile(cPath).
        THIS-OBJECT:largeImageList:Images:Add(img).
        THIS-OBJECT:smallImageList:Images:Add(img).
                
        /* Set fonts for each of the items in all groups to same font and size */
		THIS-OBJECT:ulbServices:ItemAppearance:FontData:Name = "Tahoma".
		THIS-OBJECT:ulbServices:ItemAppearance:FontData:SizeInPoints = 9.
				
		RETURN.

	END METHOD.
	
	
	METHOD PRIVATE VOID InitializeRentalsListBar(  ):
	    
	    DEFINE VARIABLE ulb AS Infragistics.Win.UltraWinListBar.UltraListBar NO-UNDO.
	    ulb = THIS-OBJECT:ulbRentals.
	    
	    /* Set Width; To change the dimensions of the control at runtime, we use the 'SetBounds' Method */
        ulb:SetBounds(ulb:Location:X, 
		              ulb:Location:Y, 
		              RENTALS_LISTBAR_WIDTH,
		              ulb:Size:Width).
        
        /* Using the UltraListBar control's 'Appearance' object property */
        img = Image:FromFile(RESOURCE_PATH + "Bitmaps\maptile.bmp"). 
        ulb:Appearance:ImageBackground = img.
		ulb:Appearance:ImageBackgroundStyle = Infragistics.Win.ImageBackgroundStyle:Tiled.
		
        /*	Add some groups	*/
		ulb:Groups:Add("Vans","Vans").
		ulb:Groups:Add("Trucks","Trucks").
		ulb:Groups:Add("Cars","Cars").
		
        /*	Remove the default group */
		ulb:Groups:Remove(ulb:Groups[0]).
		
        /*	populate groups	*/
		DO iGrp = 0 TO ulb:Groups:Count - 1:
		    oGroup = ulb:Groups[iGrp].
		    PopulateRentalsListBar(oGroup).	
		    
		    DO iItm = 0 TO oGroup:Items:Count - 1:
		        oItem = oGroup:Items[iItm].
		        
		        cPath = RESOURCE_PATH + "Bitmaps\Cars\" + oItem:Key + ".bmp".
		        
/*		        Set the Image property of each Item to its respective bitmap. Note that we made each Item's */
/*		        key the same as the name of its corresponding bitmap to make it easier to assign the images.*/
		        DEFINE VARIABLE bmp AS System.Drawing.Bitmap NO-UNDO.
		        bmp = CAST (Image:FromFile(cPath), System.Drawing.Bitmap).
		        
		        /* Make the image transparent */
		        bmp:MakeTransparent(System.Drawing.Color:White).
        
                /* Assign the image to the Item */
		        oItem:Appearance:Image = bmp.
            END.		
		END.
				
		/* Set fonts for each of the items in all groups to same font and size */
		ulb:ItemAppearance:FontData:Name = "Tahoma".
		ulb:ItemAppearance:FontData:SizeInPoints = 9.
		
		RETURN.
	    
    END METHOD.


	/*------------------------------------------------------------------------------
			Purpose: Adds the appropriate ListItems to the passed-in Group																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID PopulateServicesListBar (INPUT oGroup AS Infragistics.Win.UltraWinListBar.Group):
        
        CASE oGroup:KEY:
            WHEN "Services" THEN 
            DO:
                oGroup:Items:Add("Rent", "Rent").
                oGroup:Items:Add("Feedback", "Feedback").
                oGroup:Items:Add("Service", "Service").
                oGroup:Items:Add("Fuel", "Fuel").                
            END.
            
            WHEN "Locations" THEN 
            DO:
                oGroup:Items:Add("NewYork", "New York").
                oGroup:Items:Add("Florida", "Florida").
                oGroup:Items:Add("California", "California").
            END.
        END CASE.
        
    END METHOD.


	/*------------------------------------------------------------------------------
			Purpose: Adds the appropriate ListItems to the passed-in Group 																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
    METHOD PRIVATE VOID PopulateRentalsListBar (INPUT oGroup AS Infragistics.Win.UltraWinListBar.Group):
        
        CASE oGroup:KEY:
            WHEN "Vans" THEN 
            DO:
            	oGroup:Items:Add("RedVan", "Red Van").
            	oGroup:Items:Add("BlueVan", "Blue Van").
            	oGroup:Items:Add("RedMinivan", "Red Minivan").
            	oGroup:Items:Add("BlueMinivan", "Blue Minivan").
            	oGroup:Items:Add("GreenMinivan", "Green Minivan").
            END.
            
            WHEN "Trucks" THEN 
            DO:
            	oGroup:Items:Add("RedTruck", "Red Truck").
            	oGroup:Items:Add("BlueTruck", "Blue Truck").
            	oGroup:Items:Add("RedHauler", "Red Hauler").
            END.
            		
            WHEN "Cars" THEN 
            DO:
            	oGroup:Items:Add("RedFullsize", "Red Fullsize").
            	oGroup:Items:Add("BlueFullsize", "Blue Fullsize").
            	oGroup:Items:Add("RedMidsize", "Red Midsize").
            	oGroup:Items:Add("BlueMidsize", "Blue Midsize").
            	oGroup:Items:Add("RedCompact", "Red Compact").
            	oGroup:Items:Add("BlueCompact", "Blue Compact").
            	oGroup:Items:Add("GreenCompact", "Green Compact").
            END.
        END CASE. 
        
    END METHOD.
    

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ActiveRental_Load( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		
		THIS-OBJECT:TEXT = "Infragistics.UltraListBar ActiveRental Sample".
		THIS-OBJECT:lblTitle:BackColor = Color:FromArgb(255, 255, 200).
        THIS-OBJECT:lblTitle:ForeColor = Color:FromKnownColor(KnownColor:Red).
        THIS-OBJECT:lblTitle:BorderStyle = System.Windows.Forms.BorderStyle:Fixed3D.
        THIS-OBJECT:lblTitle:Text = "Active Auto Rentals".
        THIS-OBJECT:lblTitle:TextAlign = ContentAlignment:MiddleLeft.
		
		/* Set RESOURCE_PATH property */
		RESOURCE_PATH = "WinListBar/ActiveRental/Resources".
		
		InitializeServicesListBar(  ).
		InitializeRentalsListBar(  ).
				
		THIS-OBJECT:Timer1:Interval = 1000.  /* 1 sec. */
        THIS-OBJECT:Timer1:Enabled = TRUE.
		
		RETURN.

	END METHOD.


	/*------------------------------------------------------------------------------
			Purpose:  Let's add a little eye candy here, using the intrinsic Timer control...																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID Timer1_Tick( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):

        IF Progress.Util.EnumHelper:AreEqual(THIS-OBJECT:lblTitle:TextAlign,ContentAlignment:MiddleLeft ) THEN
               THIS-OBJECT:lblTitle:TextAlign = ContentAlignment:MiddleCenter.
        ELSE
        IF Progress.Util.EnumHelper:AreEqual(THIS-OBJECT:lblTitle:TextAlign,ContentAlignment:MiddleCenter ) THEN
               THIS-OBJECT:lblTitle:TextAlign = ContentAlignment:MiddleRight.
        ELSE
        IF Progress.Util.EnumHelper:AreEqual(THIS-OBJECT:lblTitle:TextAlign,ContentAlignment:MiddleRight ) THEN
               THIS-OBJECT:lblTitle:TextAlign = ContentAlignment:MiddleLeft. 

		RETURN.

	END METHOD.


	/*------------------------------------------------------------------------------
			Purpose: The ItemSelected event is fired whenever an Item is clicked or selected via code.
			         Let's use this event to load the given item's appropriate Rich Text document... 																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ulbRentals_ItemSelected( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinListBar.ItemEventArgs ):
		
		cPath = RESOURCE_PATH + "Documents\" + e:ITEM:Key + ".rtf".
		
        THIS-OBJECT:rtbContent:LoadFile(cPath).             		
		
		RETURN.

	END METHOD.


	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ulbServices_ItemSelected( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinListBar.ItemEventArgs ):
		
		IF e:Item:Key NE "Submit" THEN
        DO:
            cPath = RESOURCE_PATH + "Documents\" + e:Item:Key + ".rtf".
            
            IF NOT System.IO.File:Exists(cPath) THEN
                RETURN.
                
            THIS-OBJECT:rtbContent:LoadFile(cPath).
            
/*          Add an Item so the user can submit their requests          */
/*			Let's use the 'Exists' method to determine whether the 'Submit' Item*/
/*			already exists; if it does, we don't need to add it                 */

            IF NOT e:Item:Group:Items:Exists("Submit") AND e:Item:Key NE "Fuel" AND e:Item:Group:Key NE "Locations" THEN 
                e:Item:Group:Items:Add("Submit", "Submit").
           
/*          If the 'Fuel' item was selected, remove the 'Submit' item, if there is one*/
            IF e:Item:Group:Items:Exists("Submit") AND e:Item:Key EQ "Fuel" THEN
                e:Item:Group:Items:Remove(e:Item:Group:Items["Submit"]).

/*          If the 'Fuel' item was selected, we can return now, snce there is nothing to submit*/
            IF e:Item:Key EQ "Fuel" THEN
                RETURN.
                
/*          If the current group is the 'Locations' group, we can return now*/
            IF e:Item:Group:Key EQ "Locations" THEN
                RETURN.            
                
/*          Configure the 'Submit' item*/
            e:Item:Group:Items["Submit"]:Appearance:ForeColor = Color:FromKnownColor(KnownColor:Red).
			e:Item:Group:Items["Submit"]:LargeImageIndex = THIS-OBJECT:largeImageList:Images:Count.
			e:Item:Group:Items["Submit"]:SmallImageIndex = THIS-OBJECT:smallImageList:Images:Count.
        END.
        ELSE  /* 'Submit' was selected */
        DO:
/*          Notify the user that the request was submitted*/
            MESSAGE "Your request has been submitted successfully."
                VIEW-AS ALERT-BOX TITLE "Submit request".
           
/*          Notify the user that the request was submitted*/
            e:Item:Group:Items:Remove(e:Item).
            
/*          Clear the RichTextBox*/
			THIS-OBJECT:rtbContent:Clear().                
        END.
		
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ulbServices_GroupSelected( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinListBar.GroupEventArgs ):
		
		IF NOT e:Group:Control:Groups:Exists("Services") THEN
            RETURN.
            
/*      Clear the RichTextBox*/
        THIS-OBJECT:rtbContent:Clear().
        
/*      The GroupSelected event fires whenever a group header is clicked, or if the group is selected            */
/*      via code. We will use it here to remove the 'Submit' Item, if one exists. One way to do this by using the*/
/*      Group object's 'Control' property, which returns a reference to the UltraListBar control.                */
        IF e:Group:Control:groups["Services"]:Items:Exists("Submit") THEN
            e:Group:Control:Groups["Services"]:Items:Remove(e:Group:Control:Groups["Services"]:Items["Submit"]).
		
		RETURN.

	END METHOD.


	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ulbRentals_GroupSelected( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinListBar.GroupEventArgs ):
        
        THIS-OBJECT:rtbContent:Clear().		
		RETURN.

	END METHOD.

END CLASS.