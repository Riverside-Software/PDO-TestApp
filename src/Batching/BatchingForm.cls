 
 /*------------------------------------------------------------------------
    File        : MyForm
    Purpose     : 
    Syntax      : 
    Description : 
    Author(s)   : hdaniels
    Created     : Mon Aug 18 20:32:22 EDT 2008
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*. 
USING Progress.Windows.Form.
using Progress.Data.BindingSource.
using Progress.Util.*.
using Infragistics.Win.UltraWinDataSource.*.
using Infragistics.Win.UltraWinGrid.*.
using DataServices.*.

CLASS Batching.BatchingForm INHERITS Form   : 
	
	DEFINE PRIVATE VARIABLE components AS System.ComponentModel.IContainer.

	define private variable ultraGrid1 as Infragistics.Win.UltraWinGrid.UltraGrid no-undo.
	define private variable ultraButton1 as Infragistics.Win.Misc.UltraButton no-undo.
	define private variable ultraNumericEditor1 as Infragistics.Win.UltraWinEditors.UltraNumericEditor no-undo.

    define private variable OrderLineService as DataServices.IDataBatchingService no-undo.

    define private variable ultraLabel2 as Infragistics.Win.Misc.UltraLabel no-undo.
    define private variable ultraNumericEditor2 as Infragistics.Win.UltraWinEditors.UltraNumericEditor no-undo.

    define private variable ultraLabel3 as Infragistics.Win.Misc.UltraLabel no-undo.

    define private variable ultraComboEditor1 as Infragistics.Win.UltraWinEditors.UltraComboEditor no-undo.
    define private variable ultraLabel4 as Infragistics.Win.Misc.UltraLabel no-undo.

    define private variable bindingSource1 as Progress.Data.BindingSource no-undo.

    define private variable ultraCheckEditor1 as Infragistics.Win.UltraWinEditors.UltraCheckEditor no-undo.

    define private variable cntrlBatchSize as Infragistics.Win.UltraWinEditors.UltraNumericEditor no-undo.

	define private property BatchSize as integer no-undo 
	get:
	   return unbox(cntrlBatchSize:Value).
	end.    

    define private property Batching as logical no-undo 
	get:
	   if valid-object(OrderLineService) then 
	       return bindingSource1:Batching.  
	   else 
	       return Batchsize <> 0.
	end.  

	define private variable ultraLabel1 as Infragistics.Win.Misc.UltraLabel no-undo.
	
		
	CONSTRUCTOR PUBLIC BatchingForm (  ):
		
		SUPER().
		InitializeComponent ( ).

	END CONSTRUCTOR.
   

    METHOD PRIVATE VOID InitializeComponent(  ):
		
/*		NOTE: The following method is generated by the OpenEdge Advanced GUI Visual Designer.

		We strongly suggest that the contents of this method only be modified using the
		Visual Designer to avoid any incompatible modifications.

		Modifying the contents of this method using a code editor will invalidate any support for this file.*/

		@VisualDesigner.FormMember (NeedsInitialize="true").
		define variable appearance2 as Infragistics.Win.Appearance no-undo.
		appearance2 = new Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		define variable appearance4 as Infragistics.Win.Appearance no-undo.
		appearance4 = new Infragistics.Win.Appearance().
		@VisualDesigner.FormMember (NeedsInitialize="true").
		define variable appearance3 as Infragistics.Win.Appearance no-undo.
		appearance3 = new Infragistics.Win.Appearance().
		this-object:ultraGrid1 = new Infragistics.Win.UltraWinGrid.UltraGrid().
		this-object:ultraButton1 = new Infragistics.Win.Misc.UltraButton().
		this-object:ultraNumericEditor1 = new Infragistics.Win.UltraWinEditors.UltraNumericEditor().
		this-object:ultraLabel2 = new Infragistics.Win.Misc.UltraLabel().
		this-object:ultraNumericEditor2 = new Infragistics.Win.UltraWinEditors.UltraNumericEditor().
		this-object:ultraLabel3 = new Infragistics.Win.Misc.UltraLabel().
		this-object:cntrlBatchSize = new Infragistics.Win.UltraWinEditors.UltraNumericEditor().
		this-object:ultraComboEditor1 = new Infragistics.Win.UltraWinEditors.UltraComboEditor().
		this-object:ultraLabel4 = new Infragistics.Win.Misc.UltraLabel().
		this-object:bindingSource1 = new Progress.Data.BindingSource().
		this-object:ultraCheckEditor1 = new Infragistics.Win.UltraWinEditors.UltraCheckEditor().
		this-object:ultraLabel1 = new Infragistics.Win.Misc.UltraLabel().
		cast(this-object:ultraGrid1, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:ultraNumericEditor1, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:ultraNumericEditor2, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:cntrlBatchSize, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:ultraComboEditor1, System.ComponentModel.ISupportInitialize):BeginInit().
		cast(this-object:bindingSource1, System.ComponentModel.ISupportInitialize):BeginInit().
		this-object:SuspendLayout().
		/*  */
		/* ultraGrid1 */
		/*  */
		this-object:ultraGrid1:Anchor = cast(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(Progress.Util.EnumHelper:Or(System.Windows.Forms.AnchorStyles:Top, System.Windows.Forms.AnchorStyles:Bottom), System.Windows.Forms.AnchorStyles:Left), System.Windows.Forms.AnchorStyles:Right), System.Windows.Forms.AnchorStyles).
		this-object:ultraGrid1:DisplayLayout:Override:HeaderClickAction = Infragistics.Win.UltraWinGrid.HeaderClickAction:ExternalSortMulti.
		this-object:ultraGrid1:Location = new System.Drawing.Point(0, 123).
		this-object:ultraGrid1:Name = "ultraGrid1".
		this-object:ultraGrid1:Size = new System.Drawing.Size(676, 313).
		this-object:ultraGrid1:TabIndex = 0.
		this-object:ultraGrid1:BeforeSortChange:subscribe(this-object:ultraGrid1_BeforeSortChange).
		this-object:ultraGrid1:InitializeLayout:subscribe(this-object:ultraGrid1_InitializeLayout).
		this-object:ultraGrid1:AfterSortChange:subscribe(this-object:ultraGrid1_AfterSortChange).
		/*  */
		/* ultraButton1 */
		/*  */
		this-object:ultraButton1:Location = new System.Drawing.Point(203, 8).
		this-object:ultraButton1:Name = "ultraButton1".
		this-object:ultraButton1:Size = new System.Drawing.Size(101, 23).
		this-object:ultraButton1:TabIndex = 2.
		this-object:ultraButton1:Text = "Fetch Data".
		this-object:ultraButton1:Click:subscribe(this-object:ultraButton1_Click).
		/*  */
		/* ultraNumericEditor1 */
		/*  */
		this-object:ultraNumericEditor1:Location = new System.Drawing.Point(123, 39).
		this-object:ultraNumericEditor1:Name = "ultraNumericEditor1".
		this-object:ultraNumericEditor1:PromptChar = ' '.
		this-object:ultraNumericEditor1:ReadOnly = true.
		this-object:ultraNumericEditor1:Size = new System.Drawing.Size(74, 21).
		this-object:ultraNumericEditor1:TabIndex = 3.
		/*  */
		/* ultraLabel2 */
		/*  */
		appearance2:TextHAlignAsString = "Left".
		appearance2:TextVAlignAsString = "Middle".
		this-object:ultraLabel2:Appearance = appearance2.
		this-object:ultraLabel2:Location = new System.Drawing.Point(12, 94).
		this-object:ultraLabel2:Name = "ultraLabel2".
		this-object:ultraLabel2:Size = new System.Drawing.Size(77, 23).
		this-object:ultraLabel2:TabIndex = 6.
		this-object:ultraLabel2:Text = "Sort time:".
		/*  */
		/* ultraNumericEditor2 */
		/*  */
		this-object:ultraNumericEditor2:Location = new System.Drawing.Point(123, 96).
		this-object:ultraNumericEditor2:Name = "ultraNumericEditor2".
		this-object:ultraNumericEditor2:PromptChar = ' '.
		this-object:ultraNumericEditor2:ReadOnly = true.
		this-object:ultraNumericEditor2:Size = new System.Drawing.Size(74, 21).
		this-object:ultraNumericEditor2:TabIndex = 5.
		/*  */
		/* ultraLabel3 */
		/*  */
		appearance4:TextHAlignAsString = "Left".
		appearance4:TextVAlignAsString = "Middle".
		this-object:ultraLabel3:Appearance = appearance4.
		this-object:ultraLabel3:Location = new System.Drawing.Point(12, 39).
		this-object:ultraLabel3:Name = "ultraLabel3".
		this-object:ultraLabel3:Size = new System.Drawing.Size(77, 23).
		this-object:ultraLabel3:TabIndex = 8.
		this-object:ultraLabel3:Text = "Num records:".
		/*  */
		/* cntrlBatchSize */
		/*  */
		this-object:cntrlBatchSize:Location = new System.Drawing.Point(123, 10).
		this-object:cntrlBatchSize:MinValue = 0.
		this-object:cntrlBatchSize:Name = "cntrlBatchSize".
		this-object:cntrlBatchSize:PromptChar = ' '.
		this-object:cntrlBatchSize:ReadOnly = true.
		this-object:cntrlBatchSize:Size = new System.Drawing.Size(74, 21).
		this-object:cntrlBatchSize:TabIndex = 7.
		this-object:cntrlBatchSize:ValueChanged:subscribe(this-object:cntrlBatchSize_ValueChanged).
		/*  */
		/* ultraComboEditor1 */
		/*  */
		this-object:ultraComboEditor1:Location = new System.Drawing.Point(123, 67).
		this-object:ultraComboEditor1:Name = "ultraComboEditor1".
		this-object:ultraComboEditor1:Size = new System.Drawing.Size(125, 21).
		this-object:ultraComboEditor1:SyncWithCurrencyManager = false.
		this-object:ultraComboEditor1:TabIndex = 9.
		this-object:ultraComboEditor1:ValueChanged:subscribe(this-object:ultraComboEditor1_ValueChanged).
		/*  */
		/* ultraLabel4 */
		/*  */
		appearance3:TextHAlignAsString = "Left".
		appearance3:TextVAlignAsString = "Middle".
		this-object:ultraLabel4:Appearance = appearance3.
		this-object:ultraLabel4:Location = new System.Drawing.Point(12, 67).
		this-object:ultraLabel4:Name = "ultraLabel4".
		this-object:ultraLabel4:Size = new System.Drawing.Size(110, 23).
		this-object:ultraLabel4:TabIndex = 10.
		this-object:ultraLabel4:Text = "Header click action :".
		/*  */
		/* bindingSource1 */
		/*  */
		this-object:bindingSource1:Batching = true.
		this-object:bindingSource1:TableSchema = ?.
		this-object:bindingSource1:OffEnd:subscribe(this-object:bindingSource1_OffEnd).
		/*  */
		/* ultraCheckEditor1 */
		/*  */
		this-object:ultraCheckEditor1:Location = new System.Drawing.Point(12, 11).
		this-object:ultraCheckEditor1:Name = "ultraCheckEditor1".
		this-object:ultraCheckEditor1:Size = new System.Drawing.Size(105, 20).
		this-object:ultraCheckEditor1:TabIndex = 11.
		this-object:ultraCheckEditor1:Text = "Use batch size: ".
		this-object:ultraCheckEditor1:CheckedChanged:subscribe(this-object:ultraCheckEditor1_CheckedChanged).
		/*  */
		/* ultraLabel1 */
		/*  */
		this-object:ultraLabel1:Location = new System.Drawing.Point(252, 67).
		this-object:ultraLabel1:Name = "ultraLabel1".
		this-object:ultraLabel1:Size = new System.Drawing.Size(417, 50).
		this-object:ultraLabel1:TabIndex = 12.
		/*  */
		/* BatchingForm */
		/*  */
		this-object:ClientSize = new System.Drawing.Size(676, 437).
		this-object:Controls:Add(this-object:ultraLabel1).
		this-object:Controls:Add(this-object:ultraCheckEditor1).
		this-object:Controls:Add(this-object:ultraLabel4).
		this-object:Controls:Add(this-object:ultraComboEditor1).
		this-object:Controls:Add(this-object:ultraLabel3).
		this-object:Controls:Add(this-object:cntrlBatchSize).
		this-object:Controls:Add(this-object:ultraLabel2).
		this-object:Controls:Add(this-object:ultraNumericEditor2).
		this-object:Controls:Add(this-object:ultraNumericEditor1).
		this-object:Controls:Add(this-object:ultraButton1).
		this-object:Controls:Add(this-object:ultraGrid1).
		this-object:Name = "BatchingForm".
		this-object:Text = "BatchingForm".
		this-object:Load:subscribe(this-object:BatchingForm_Load).
		cast(this-object:ultraGrid1, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:ultraNumericEditor1, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:ultraNumericEditor2, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:cntrlBatchSize, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:ultraComboEditor1, System.ComponentModel.ISupportInitialize):EndInit().
		cast(this-object:bindingSource1, System.ComponentModel.ISupportInitialize):EndInit().
		this-object:ResumeLayout(false).
		this-object:PerformLayout().
	END METHOD.
  
    method private Progress.Data.BindingSource GetOrderLineDataSource( ):
	    /* just delete the service for now.  */
	    delete object OrderLineService no-error.
	    
	    OrderLineService = new OrderLineService( ).
        OrderLineService:BatchSize = this-object:BatchSize.  
        OrderLineService:FetchData().	
        bindingSource1:Handle = OrderLineService:DatasetHandle.   
        bindingSource1:Batching = not OrderLineService:HasLast. 
        ShowNumRecords(bindingSource1:count).
        return bindingSource1.
	end.
    
    method private void initializeDataSource ( ):
        ultraGrid1:DataSource = GetOrderLineDataSource().
    end.
          
    method protected character SortExpression(sortedColumns as SortedColumnsCollection):
    	define variable sortColumn as UltraGridColumn no-undo.
		define variable i as int no-undo.
        define variable sortString as char no-undo.
   
        /* build a sort string from the band's SortedColumns */
		do i = 0 to sortedColumns:Count - 1:
		    sortColumn = cast(sortedColumns[i],UltraGridColumn).
		    sortString = sortString + " by " + sortColumn:Key.
			if Progress.Util.EnumHelper:AreEqual(sortColumn:SortIndicator,SortIndicator:Descending) then
               sortString = sortString + " descending".     
		end.
		return left-trim(sortString). 
    end method.
   	
   	method private void ShowNumRecords (numRecords as int ):
        ultraNumericEditor1:value = numRecords.
    end.
    
    method private void ShowAddedRecords (numRecords as int ):
        ultraNumericEditor1:value = unbox(ultraNumericEditor1:value) + numRecords.
    end.
    
    method private void ShowProgressTime (i as int ):
        ultraNumericEditor2:value = i.
    end.
    
    method private void FormatColumns(ultraGrid as UltraGrid):
		define variable bands as Infragistics.Win.UltraWinGrid.BandsCollection no-undo.
		define variable bandColumns as Infragistics.Win.UltraWinGrid.ColumnsCollection no-undo.
        define variable oBand as Infragistics.Win.UltraWinGrid.UltraGridBand no-undo.
        define variable oColumn as Infragistics.Win.UltraWinGrid.UltraGridColumn no-undo.
        define variable iBand as integer no-undo.
        define variable iColumn as integer no-undo.
        
		bands = UltraGrid:DisplayLayout:Bands.
		do iBand = 0 to bands:Count - 1:
		    oBand = cast(bands[iBand],Infragistics.Win.UltraWinGrid.UltraGridBand).
		    bandColumns = oBand:Columns.
		    do iColumn = 0 to bandColumns:Count - 1:
		        oColumn = cast(bandColumns[iColumn],Infragistics.Win.UltraWinGrid.UltraGridColumn).
                if oColumn:DataType:ToString() = "System.Int32" then
                    oColumn:CellAppearance:TextHAlign = Infragistics.Win.HAlign:Right.
               		       
		        else if oColumn:DataType:ToString() = "System.Decimal" then
                do:
                    oColumn:CellAppearance:TextHAlign = Infragistics.Win.HAlign:Right.
                    oColumn:Format = "#,###,###.00".
                end.    
		    end.
		end.
	end method.
    
    method private void validateUI():
        define variable multitext as char no-undo.
        if EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:SortMulti) 
        or EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:ExternalSortMulti) then
	        multiText = "~r~nHold SHIFT while clicking on the header to sort on multiple columns.". 
        
        if EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:SortSingle)
	    or EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:SortMulti) then
	    do:
	        
	        if this-object:Batching then 
            do: 
                ultraLabel1:ForeColor = System.Drawing.Color:Red.
                ultraLabel1:Text = "The " 
                                 + ultraGrid1:DisplayLayout:Override:HeaderClickAction:toString() 
                                 + " option is not suited for batching."
                                 + " It will sort the data in the grid and only include the data already in the batch." 
                                 + " If you toggle between descending and ascending you will probably notice that data are missing."
                                 + multiText. 
            end.
            else do: 
                ultraLabel1:ForeColor = System.Drawing.Color:Blue.
                ultraLabel1:Text = "The " 
                                 + ultraGrid1:DisplayLayout:Override:HeaderClickAction:toString() 
                                 + " option tells the grid do its own sorting."
                                 + " This is not anywhere near as fast as doing the sort with an ABL query." 
                                 + " Try it out and notice the Sort time and then compare it to the sorting with the External* options."    
                                 + multiText. 
            end.
        end.
        else 
        if EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:ExternalSortMulti)
        or EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:ExternalSortSingle) then
	    do:
	        ultraLabel1:ForeColor = System.Drawing.Color:Green.
            ultraLabel1:Text = "The " 
                             + ultraGrid1:DisplayLayout:Override:HeaderClickAction:toString() 
                             + " option tells the grid that the sorting is to be done externally with code."
                             + " This allows you to handle the sort in the underlying ABL query or "
                             + "read a new batch of data with the correct sort from the server if you are batching."
                             + multitext.  
        end.        
        else 
          ultraLabel1:Text = "".
    end method.     

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID bindingSource1_OffEnd( INPUT sender AS System.Object, INPUT args AS Progress.Data.OffEndEventArgs ):
	    args:RowsAdded = OrderLineService:FetchNextBatch().
		bindingSource1:Batching = (OrderLineService:HasLast = false). 
		ShowAddedRecords(args:RowsAdded).
        ValidateUI().
		RETURN.
	END METHOD.
 
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraButton1_Click( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
	    initializeDataSource().	
	 	ValidateUI().
		
	 	RETURN.
	END METHOD.


	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraCheckEditor1_CheckedChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		
		/* not the most elegant eror handling - 
		   the valuechanged trigger will set the check box back if error  */
		if not ultraCheckEditor1:Checked then 
		   cntrlBatchSize:Value = 0.
	    
	    cntrlBatchSize:ReadOnly = not ultraCheckEditor1:Checked.
	
		RETURN.

	END METHOD.


 	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraComboEditor1_ValueChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		define variable type as System.Type no-undo.      
        type = Progress.Util.TypeHelper:GetType("Infragistics.Win.UltraWinGrid.HeaderClickAction"). 
        ultraGrid1:DisplayLayout:Override:HeaderClickAction = cast(System.Enum:ToObject(type,ultraComboEditor1:SelectedIndex),Infragistics.Win.UltraWinGrid.HeaderClickAction).
		validateUI().
		RETURN.
	END METHOD.

 	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraGrid1_AfterSortChange( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinGrid.BandEventArgs ):
	    /* if ExternaSortSingle or - Multi then the sort needs to be handled in code in this event */  
	    if EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:ExternalSortSingle)
	    or EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:ExternalSortMulti) then
	    do:
	       etime(true). 
	       System.Windows.Forms.Cursor:Current = System.Windows.Forms.Cursors:WaitCursor.
	       /* ResortQuery will empty and issue a new request if we are batching */
	       OrderLineService:ResortQuery(e:Band:Key,this-object:SortExpression(e:Band:SortedColumns)).
	       bindingSource1:Batching = not OrderLineService:HasLast.
	       System.Windows.Forms.Cursor:Current = System.Windows.Forms.Cursors:Default.
	    end.
	    ShowNumRecords(bindingSource1:Count).
	    ShowProgressTime(etime).
	    ValidateUI().
		RETURN.

	END METHOD.

	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraGrid1_BeforeSortChange( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinGrid.BeforeSortChangeEventArgs ):
	
	    /* if SortSingle or SortMulti then the sort is handled by the grid and 
	       we make the process mode synchrenous so we can set the wait cursor */
	    if EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:SortSingle)
	    or EnumHelper:AreEqual(ultraGrid1:DisplayLayout:Override:HeaderClickAction,HeaderClickAction:SortMulti) then
	    do:  
	       e:ProcessMode = Infragistics.Win.UltraWinGrid.ProcessMode:Synchronous. 	
		   System.Windows.Forms.Cursor:Current = System.Windows.Forms.Cursors:WaitCursor. 
           etime(true). 
        end.
        
		RETURN.

	END METHOD.

    /*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID BatchingForm_Load( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		/* initialize the combo with headerclickaction options and show the current */
	    Batching.EnumUtil:LoadEnumCombo(ultraComboEditor1,"Infragistics.Win.UltraWinGrid.HeaderClickAction").
		ultraComboEditor1:Value = ultragrid1:DisplayLayout:Override:HeaderClickAction.
		RETURN.
	END METHOD.
	
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID ultraGrid1_InitializeLayout( INPUT sender AS System.Object, INPUT e AS Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs ):
		FormatColumns(this-object:ultraGrid1).
		RETURN.
	END METHOD.
     
    
	/*------------------------------------------------------------------------------
			Purpose:  																	  
			Notes:  																	  
	------------------------------------------------------------------------------*/
	@VisualDesigner.
	METHOD PRIVATE VOID cntrlBatchSize_ValueChanged( INPUT sender AS System.Object, INPUT e AS System.EventArgs ):
		define variable newSize as integer no-undo.
		
		newSize = unbox(cntrlBatchSize:Value).
		if valid-object(OrderLineService) then
        do:
           if newSize = 0 and OrderLineService:HasLast = false then
           do:
               message "This sample cannot set batch to 0 while batching" 
                view-as alert-box information. 
               ultraCheckEditor1:Checked = true.
               cntrlBatchSize:ReadOnly = false.
               cntrlBatchSize:Value = OrderLineService:BatchSize.    
           end.
           else
               OrderLineService:BatchSize = newSize.
		end.
		RETURN.

	END METHOD.

     
     
	DESTRUCTOR PUBLIC BatchingForm ( ):

		IF VALID-OBJECT(components) THEN DO:
			CAST(components, System.IDisposable):Dispose().
		END.

	END DESTRUCTOR.

END CLASS.